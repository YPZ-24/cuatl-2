{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\cuatl\\\\cuatl\\\\front-end\\\\components\\\\buttons\\\\PaymentButton.js\";\nimport PropTypes from 'prop-types';\nimport { useContext } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { STRIPE_PUBLISHED_KEY, API_DOMAIN } from '@/config/globals';\nimport AuthContext from '@/context/AuthContext';\nconst stripePromise = loadStripe(STRIPE_PUBLISHED_KEY);\n\nconst PaymentButton = ({\n  order\n}) => {\n  const {\n    getToken\n  } = useContext(AuthContext);\n\n  const handlePayment = async () => {\n    const stripe = await stripePromise;\n    const token = await getToken();\n    const response = await fetch(`${API_DOMAIN}/orders`, {\n      method: 'POST',\n      body: JSON.stringify({\n        order\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const session = await response.json();\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handlePayment,\n    className: \"flex flex-row flex-nowrap items-center justify-center font-bold px-4 py-3 rounded-lg bg-accent text-base shadow hover:bg-inactive hover:text-primary\",\n    children: \"Continuar al pago\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\nPaymentButton.propTypes = {\n  order: PropTypes.array\n};\nPaymentButton.default = {\n  order: []\n};\nexport default PaymentButton;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/cuatl/cuatl/front-end/components/buttons/PaymentButton.js"],"names":["PropTypes","useContext","loadStripe","STRIPE_PUBLISHED_KEY","API_DOMAIN","AuthContext","stripePromise","PaymentButton","order","getToken","handlePayment","stripe","token","response","fetch","method","body","JSON","stringify","headers","session","json","result","redirectToCheckout","sessionId","id","propTypes","array","default"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,SAASC,oBAAT,EAA+BC,UAA/B,QAAiD,kBAAjD;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,MAAMC,aAAa,GAAGJ,UAAU,CAACC,oBAAD,CAAhC;;AAEA,MAAMI,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAeR,UAAU,CAACI,WAAD,CAA/B;;AAEA,QAAMK,aAAa,GAAG,YAAY;AAChC,UAAMC,MAAM,GAAG,MAAML,aAArB;AACA,UAAMM,KAAK,GAAG,MAAMH,QAAQ,EAA5B;AACA,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,UAAW,SAAf,EAAyB;AACnDW,MAAAA,MAAM,EAAE,MAD2C;AAEnDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEV,QAAAA;AAAF,OAAf,CAF6C;AAGnDW,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,yBAAkB,UAASP,KAAM;AAF1B;AAH0C,KAAzB,CAA5B;AAQA,UAAMQ,OAAO,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAtB;AACA,UAAMC,MAAM,GAAG,MAAMX,MAAM,CAACY,kBAAP,CAA0B;AAC7CC,MAAAA,SAAS,EAAEJ,OAAO,CAACK;AAD0B,KAA1B,CAArB;AAGD,GAfD;;AAiBA,sBACE;AACE,IAAA,OAAO,EAAEf,aADX;AAEE,IAAA,SAAS,EAAC,sJAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA5BD;;AA8BAH,aAAa,CAACmB,SAAd,GAA0B;AACxBlB,EAAAA,KAAK,EAAER,SAAS,CAAC2B;AADO,CAA1B;AAIApB,aAAa,CAACqB,OAAd,GAAwB;AACtBpB,EAAAA,KAAK,EAAE;AADe,CAAxB;AAIA,eAAeD,aAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { useContext } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\n\nimport { STRIPE_PUBLISHED_KEY, API_DOMAIN } from '@/config/globals';\nimport AuthContext from '@/context/AuthContext';\n\nconst stripePromise = loadStripe(STRIPE_PUBLISHED_KEY);\n\nconst PaymentButton = ({ order }) => {\n  const { getToken } = useContext(AuthContext);\n\n  const handlePayment = async () => {\n    const stripe = await stripePromise;\n    const token = await getToken();\n    const response = await fetch(`${API_DOMAIN}/orders`, {\n      method: 'POST',\n      body: JSON.stringify({ order }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const session = await response.json();\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id\n    });\n  };\n\n  return (\n    <button\n      onClick={handlePayment}\n      className=\"flex flex-row flex-nowrap items-center justify-center font-bold px-4 py-3 rounded-lg bg-accent text-base shadow hover:bg-inactive hover:text-primary\"\n    >\n      Continuar al pago\n    </button>\n  );\n};\n\nPaymentButton.propTypes = {\n  order: PropTypes.array\n};\n\nPaymentButton.default = {\n  order: []\n};\n\nexport default PaymentButton;\n"]},"metadata":{},"sourceType":"module"}