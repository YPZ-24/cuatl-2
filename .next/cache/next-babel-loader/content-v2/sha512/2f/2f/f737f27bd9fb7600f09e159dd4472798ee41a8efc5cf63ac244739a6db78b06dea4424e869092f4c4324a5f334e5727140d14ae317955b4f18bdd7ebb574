{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/DELL/Desktop/cuatl-2/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/DELL/Desktop/cuatl-2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\cuatl-2\\\\pages\\\\user\\\\orders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { API_DOMAIN } from '@/config/globals';\nimport AuthContext from '@/context/AuthContext';\nimport OrderContext from '@/context/OrderContext';\nimport { Accordion, AccordionSummary, Typography, AccordionDetails, Grid, Divider, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport formatPrice from '@/utils/format-price';\nimport { useRouter } from 'next/router';\nimport myFetch from '../../utils/myFetch';\nimport { useSnackbar } from 'notistack';\n\nfunction orders() {\n  _s();\n\n  var _this = this;\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var _useContext = useContext(AuthContext),\n      getToken = _useContext.getToken;\n\n  var _useContext2 = useContext(OrderContext),\n      order = _useContext2.order,\n      setOrder = _useContext2.setOrder;\n\n  var _useState = useState([]),\n      userOrders = _useState[0],\n      setUserOrders = _useState[1];\n\n  var router = useRouter();\n  console.log(\"U\");\n  console.log(order);\n\n  var confirmOrder = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(sessionId) {\n      var order;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return myFetch({\n                method: 'POST',\n                path: \"/orders/confirm\",\n                body: {\n                  checkout_session: sessionId\n                }\n              });\n\n            case 2:\n              order = _context.sent;\n              if (order._id) enqueueSnackbar(\"Listo: \".concat(order.status.toUpperCase()));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function confirmOrder(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    console.log(\"O\");\n    console.log(order); //cleanOrder()\n\n    setOrder([]);\n    var path = router.asPath;\n    var i = path.search(\"=\");\n    var sessionId = path.slice(i + 1);\n\n    if (i != -1) {\n      confirmOrder(sessionId);\n      router.push('/user/orders');\n    }\n  }, []);\n\n  function getUserOrders() {\n    return _getUserOrders.apply(this, arguments);\n  }\n\n  function _getUserOrders() {\n    _getUserOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var token, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getToken();\n\n            case 2:\n              token = _context2.sent;\n              _context2.next = 5;\n              return fetch(\"\".concat(API_DOMAIN, \"/orders\"), {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': \"Bearer \".concat(token)\n                }\n              });\n\n            case 5:\n              _context2.next = 7;\n              return _context2.sent.json();\n\n            case 7:\n              response = _context2.sent;\n              setUserOrders(response);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _getUserOrders.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    getUserOrders();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 5,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          align: \"center\",\n          children: \"MIS COMPRAS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: userOrders.map(function (o) {\n          return /*#__PURE__*/_jsxDEV(Accordion, {\n            children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n              expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 63\n              }, _this),\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 8,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    gutterBottom: true,\n                    variant: \"overline\",\n                    children: new Date(o.createdAt).toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 37\n                  }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                    gutterBottom: true,\n                    variant: \"subtitle1\",\n                    children: o.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 37\n                  }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    children: formatPrice('MXN', o.total)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 37\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 33\n                }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 1,\n                  children: /*#__PURE__*/_jsxDEV(Divider, {\n                    orientation: \"vertical\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 37\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 33\n                }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  style: {\n                    display: \"flex\",\n                    alignItems: \"center\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: o.delivery_status.toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 37\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 33\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, _this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                size: \"small\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: \"ARTICULO\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 49\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: \"COLOR\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 49\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"center\",\n                      children: \"TAMA\\xD1O\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 49\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 45\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 41\n                }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: o.variants.map(function (v) {\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: v.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 111,\n                        columnNumber: 53\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: v.color\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 53\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: v.size\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 117,\n                        columnNumber: 53\n                      }, _this)]\n                    }, \"Variant-\".concat(v.id), true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 49\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 41\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, _this)]\n          }, \"Order-\".concat(o.id), true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(orders, \"wMXviJJ3u7FgCUcpVS0idFRirvo=\", false, function () {\n  return [useSnackbar, useRouter];\n});\n\nexport default orders;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/cuatl-2/pages/user/orders.js"],"names":["React","useContext","useEffect","useState","API_DOMAIN","AuthContext","OrderContext","Accordion","AccordionSummary","Typography","AccordionDetails","Grid","Divider","Table","TableHead","TableBody","TableRow","TableCell","ExpandMoreIcon","formatPrice","useRouter","myFetch","useSnackbar","orders","enqueueSnackbar","getToken","order","setOrder","userOrders","setUserOrders","router","console","log","confirmOrder","sessionId","method","path","body","checkout_session","_id","status","toUpperCase","asPath","i","search","slice","push","getUserOrders","token","fetch","headers","json","response","map","o","Date","createdAt","toLocaleString","total","display","alignItems","delivery_status","variants","v","name","color","size","id"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\r\nimport { API_DOMAIN } from '@/config/globals';\r\nimport AuthContext from '@/context/AuthContext';\r\nimport OrderContext from '@/context/OrderContext';\r\nimport { Accordion, AccordionSummary, Typography, AccordionDetails, Grid, Divider, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport formatPrice from '@/utils/format-price';\r\nimport { useRouter } from 'next/router';\r\nimport myFetch from '../../utils/myFetch'\r\nimport {useSnackbar} from 'notistack'\r\n\r\nfunction orders() {\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const { getToken } = useContext(AuthContext);\r\n    const { order, setOrder } = useContext(OrderContext);\r\n    const [userOrders, setUserOrders] = useState([])\r\n    const router = useRouter();\r\n    console.log(\"U\")\r\n    console.log(order)\r\n\r\n    const confirmOrder = async (sessionId) => {\r\n        const order = await myFetch({\r\n            method: 'POST', \r\n            path: `/orders/confirm`, \r\n            body: { checkout_session: sessionId }\r\n        })\r\n        if(order._id) enqueueSnackbar(`Listo: ${order.status.toUpperCase()}`)\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"O\")\r\n        console.log(order)\r\n        //cleanOrder()\r\n        setOrder([])\r\n\r\n        const path = router.asPath\r\n        const i = path.search(\"=\")\r\n        const sessionId = path.slice(i+1)\r\n        if(i!=-1) {\r\n            confirmOrder(sessionId)\r\n            router.push('/user/orders')\r\n        }\r\n      }, []);\r\n\r\n    async function getUserOrders(){\r\n        const token = await getToken();\r\n        const response = await (await fetch(`${API_DOMAIN}/orders`, {\r\n            method: 'GET',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${token}`\r\n            }\r\n          })).json()\r\n          setUserOrders(response)\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        getUserOrders()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={5}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h4\" align=\"center\">MIS COMPRAS</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    {\r\n                        userOrders.map((o)=>(\r\n                            <Accordion  key={`Order-${o.id}`} >\r\n                                <AccordionSummary expandIcon={<ExpandMoreIcon />} >\r\n                                <Grid container spacing={2}>\r\n                                <Grid item xs={8}>\r\n                                    <Typography gutterBottom variant=\"overline\" >{new Date(o.createdAt).toLocaleString()}</Typography>\r\n                                    <Typography gutterBottom variant=\"subtitle1\" >{o.status}</Typography>\r\n                                    <Typography variant=\"subtitle1\" >{formatPrice('MXN',o.total)}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={1}>\r\n                                    <Divider orientation=\"vertical\" />\r\n                                </Grid>\r\n                                <Grid item xs={3} style={{\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\"\r\n                                    }}\r\n                                >\r\n                                    <Typography variant=\"h6\">{o.delivery_status.toUpperCase()}</Typography>\r\n                                </Grid>\r\n                                </Grid>\r\n                                \r\n                                </AccordionSummary>\r\n\r\n                                <AccordionDetails>\r\n                                    <Table size=\"small\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"center\" >\r\n                                                    ARTICULO\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\" >\r\n                                                    COLOR\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\" >\r\n                                                    TAMAÑO\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {o.variants.map((v)=>(\r\n                                                <TableRow key={`Variant-${v.id}`}>\r\n                                                    <TableCell>\r\n                                                        {v.name}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\" >\r\n                                                        {v.color}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\" >\r\n                                                        {v.size}\r\n                                                    </TableCell>\r\n                                                </TableRow>      \r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </AccordionDetails>         \r\n                            </Accordion>\r\n                        ))\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default orders"]},"metadata":{},"sourceType":"module"}