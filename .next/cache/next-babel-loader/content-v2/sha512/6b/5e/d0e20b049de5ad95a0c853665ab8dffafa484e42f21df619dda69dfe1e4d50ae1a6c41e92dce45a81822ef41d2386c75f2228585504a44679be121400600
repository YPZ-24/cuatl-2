{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\cuatl-2\\\\components\\\\buttons\\\\AddToBagButton.tsx\";\nimport PropTypes from 'prop-types';\nimport { ShoppingBag } from 'react-feather';\nimport { useContext } from 'react';\nimport OrderContext from '@/context/OrderContext';\nAddToBagButton.propTypes = {\n  order: PropTypes.object\n};\nAddToBagButton.defaultProps = {\n  order: null\n};\nconst classes = {\n  container: `\n    bg-accent\n    cursor-pointer\n    flex\n    flex-row\n    flex-nowrap\n    items-center\n    hover:bg-inactive\n    hover:text-primary\n    justify-center\n    font-bold\n    px-4\n    py-3\n    rounded-lg\n    text-bse\n    shadow\n  `\n};\nexport default function AddToBagButton({\n  order\n}) {\n  const {\n    addProductToBag\n  } = useContext(OrderContext);\n\n  const setOrder = activeOrder => {\n    localStorage.setItem('order', JSON.stringify(activeOrder));\n  };\n\n  const getOrder = () => {\n    try {\n      return JSON.parse(localStorage.getItem('order')) || [];\n    } catch (error) {}\n\n    return [];\n  };\n\n  const handlerClick = event => {\n    console.log(\"Hi\");\n    event.preventDefault();\n    const variantQuantity = parseInt(document.getElementById('quantity').value);\n    addProductToBag(variantQuantity, order);\n    /*\r\n        \r\n    \r\n    \r\n        \r\n    \r\n        const activeOrder = getOrder();\r\n        const quantitySelector = ;\r\n        \r\n    \r\n        //: if the product and variant is already there\r\n        const indexOfOrderItem = activeOrder.findIndex((orderItem: IPaymentOrder) => orderItem.variant.id === order.variant.id);\r\n    \r\n        if (indexOfOrderItem !== -1) {\r\n          //: update quantity\r\n          const currentQuantity = activeOrder[indexOfOrderItem].quantity;\r\n          if (currentQuantity + variantQuantity <= order.variant.stock) {\r\n            activeOrder[indexOfOrderItem].quantity = currentQuantity + variantQuantity;\r\n          }\r\n        } else {\r\n          activeOrder.push({\r\n            product: order.product,\r\n            variant: order.variant,\r\n            quantity: variantQuantity,\r\n            offers: order.offers\r\n          });\r\n        }\r\n    \r\n        setOrder(activeOrder);*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    onClick: e => handlerClick(e),\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"mr-3\",\n      children: /*#__PURE__*/_jsxDEV(ShoppingBag, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"A\\xF1adir a la bolsa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/cuatl-2/components/buttons/AddToBagButton.tsx"],"names":["PropTypes","ShoppingBag","useContext","OrderContext","AddToBagButton","propTypes","order","object","defaultProps","classes","container","addProductToBag","setOrder","activeOrder","localStorage","setItem","JSON","stringify","getOrder","parse","getItem","error","handlerClick","event","console","log","preventDefault","variantQuantity","parseInt","document","getElementById","value","e"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,SAAQC,UAAR,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AAEAC,cAAc,CAACC,SAAf,GAA2B;AACzBC,EAAAA,KAAK,EAAEN,SAAS,CAACO;AADQ,CAA3B;AAIAH,cAAc,CAACI,YAAf,GAA8B;AAC5BF,EAAAA,KAAK,EAAE;AADqB,CAA9B;AAIA,MAAMG,OAAO,GAAG;AACdC,EAAAA,SAAS,EAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBgB,CAAhB;AAoBA,eAAe,SAASN,cAAT,CAAwB;AAAEE,EAAAA;AAAF,CAAxB,EAA6D;AAE1E,QAAM;AAAEK,IAAAA;AAAF,MAAsBT,UAAU,CAACC,YAAD,CAAtC;;AAGA,QAAMS,QAAQ,GAAIC,WAAD,IAAuC;AACtDC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeJ,WAAf,CAA9B;AACD,GAFD;;AAIA,QAAMK,QAAQ,GAAG,MAA4B;AAC3C,QAAI;AACF,aAAOF,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,OAArB,CAAX,KAA6C,EAApD;AACD,KAFD,CAEE,OAAOC,KAAP,EAAc,CAAG;;AAEnB,WAAO,EAAP;AACD,GAND;;AAQA,QAAMC,YAAY,GAAIC,KAAD,IAAgB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAF,IAAAA,KAAK,CAACG,cAAN;AACA,UAAMC,eAAe,GAAGC,QAAQ,CAAEC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAD,CAA0DC,KAA3D,CAAhC;AACApB,IAAAA,eAAe,CAACgB,eAAD,EAAkBrB,KAAlB,CAAf;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG,GAlCD;;AAoCA,sBACE;AAAG,IAAA,OAAO,EAAG0B,CAAD,IAAOV,YAAY,CAACU,CAAD,CAA/B;AAAoC,IAAA,SAAS,EAAEvB,OAAO,CAACC,SAAvD;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,6BAAuB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;AAAA","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { ShoppingBag } from 'react-feather';\r\nimport IPaymentOrder from '@/models/IPaymentOrder';\r\nimport {useContext} from 'react'\r\nimport OrderContext from '@/context/OrderContext';\r\n\r\nAddToBagButton.propTypes = {\r\n  order: PropTypes.object\r\n};\r\n\r\nAddToBagButton.defaultProps = {\r\n  order: null\r\n};\r\n\r\nconst classes = {\r\n  container: `\r\n    bg-accent\r\n    cursor-pointer\r\n    flex\r\n    flex-row\r\n    flex-nowrap\r\n    items-center\r\n    hover:bg-inactive\r\n    hover:text-primary\r\n    justify-center\r\n    font-bold\r\n    px-4\r\n    py-3\r\n    rounded-lg\r\n    text-bse\r\n    shadow\r\n  `\r\n};\r\n\r\nexport default function AddToBagButton({ order }: { order: IPaymentOrder }) {\r\n\r\n  const { addProductToBag } = useContext(OrderContext);\r\n\r\n\r\n  const setOrder = (activeOrder: Array<IPaymentOrder>) => {\r\n    localStorage.setItem('order', JSON.stringify(activeOrder));\r\n  };\r\n\r\n  const getOrder = (): Array<IPaymentOrder> => {\r\n    try {\r\n      return JSON.parse(localStorage.getItem('order')) || [];\r\n    } catch (error) { }\r\n\r\n    return [];\r\n  };\r\n\r\n  const handlerClick = (event: any) => {\r\n    console.log(\"Hi\")\r\n    event.preventDefault();\r\n    const variantQuantity = parseInt((document.getElementById('quantity') as HTMLInputElement).value);\r\n    addProductToBag(variantQuantity, order)\r\n/*\r\n    \r\n\r\n\r\n    \r\n\r\n    const activeOrder = getOrder();\r\n    const quantitySelector = ;\r\n    \r\n\r\n    //: if the product and variant is already there\r\n    const indexOfOrderItem = activeOrder.findIndex((orderItem: IPaymentOrder) => orderItem.variant.id === order.variant.id);\r\n\r\n    if (indexOfOrderItem !== -1) {\r\n      //: update quantity\r\n      const currentQuantity = activeOrder[indexOfOrderItem].quantity;\r\n      if (currentQuantity + variantQuantity <= order.variant.stock) {\r\n        activeOrder[indexOfOrderItem].quantity = currentQuantity + variantQuantity;\r\n      }\r\n    } else {\r\n      activeOrder.push({\r\n        product: order.product,\r\n        variant: order.variant,\r\n        quantity: variantQuantity,\r\n        offers: order.offers\r\n      });\r\n    }\r\n\r\n    setOrder(activeOrder);*/\r\n  };\r\n\r\n  return (\r\n    <a onClick={(e) => handlerClick(e)} className={classes.container}>\r\n      <span className=\"mr-3\"><ShoppingBag /></span>\r\n      <span>AÃ±adir a la bolsa</span>\r\n    </a>\r\n  );\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}