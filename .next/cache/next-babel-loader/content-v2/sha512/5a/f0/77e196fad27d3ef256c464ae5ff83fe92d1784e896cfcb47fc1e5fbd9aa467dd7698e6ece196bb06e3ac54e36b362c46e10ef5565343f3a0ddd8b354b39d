{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\cuatl-2\\\\pages\\\\user\\\\address.js\";\nimport React, { useContext } from 'react';\nimport { Formik, Form } from 'formik';\nimport MyInput from '../../components/inputs/MyInput';\nimport { Container, Typography, Button } from '@material-ui/core';\nimport * as Yup from 'yup';\nimport myFetch from '../../utils/myFetch';\nimport OrderContext from '@/context/OrderContext';\nimport AuthContext from '@/context/AuthContext';\nimport { STRIPE_PUBLISHED_KEY, API_DOMAIN } from '@/config/globals';\nimport { loadStripe } from '@stripe/stripe-js';\nconst stripePromise = loadStripe(STRIPE_PUBLISHED_KEY);\n\nfunction address() {\n  const {\n    getToken\n  } = useContext(AuthContext);\n  const {\n    order\n  } = useContext(OrderContext);\n\n  const handleSubmit = async values => {\n    if (!values.noExt) values.noExt = 0;\n    const stripe = await stripePromise;\n    const address = await myFetch({\n      method: 'POST',\n      path: `/addresses`,\n      body: values\n    });\n    const responsee = await myFetch({\n      method: 'POST',\n      path: '/orders',\n      body: {\n        order,\n        address: address.id\n      }\n    });\n    const session = await response.json();\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      align: \"center\",\n      children: \"DIRECCI\\xD3N\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        estado: '',\n        delegacion: '',\n        colonia: '',\n        calle: '',\n        noInt: 0,\n        noExt: 0,\n        cp: 0\n      },\n      onSubmit: values => handleSubmit(values),\n      validationSchema: Yup.object().shape({\n        estado: Yup.string().required(),\n        delegacion: Yup.string().required(),\n        colonia: Yup.string().required(),\n        calle: Yup.string().required(),\n        noInt: Yup.number().min(1).required(),\n        noExt: Yup.number(),\n        cp: Yup.number().min(1).required()\n      }),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(MyInput, {\n          label: \"Estado\",\n          name: \"estado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n          label: \"Delegaci\\xF3n\",\n          name: \"delegacion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n          label: \"Colonia\",\n          name: \"colonia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n          label: \"Calle\",\n          name: \"calle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n          label: \"No. Interior\",\n          name: \"noInt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n          label: \"No. Exterior\",\n          name: \"noExt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n          label: \"C\\xF3digo Postal\",\n          name: \"cp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\nexport default address;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/cuatl-2/pages/user/address.js"],"names":["React","useContext","Formik","Form","MyInput","Container","Typography","Button","Yup","myFetch","OrderContext","AuthContext","STRIPE_PUBLISHED_KEY","API_DOMAIN","loadStripe","stripePromise","address","getToken","order","handleSubmit","values","noExt","stripe","method","path","body","responsee","id","session","response","json","result","redirectToCheckout","sessionId","estado","delegacion","colonia","calle","noInt","cp","object","shape","string","required","number","min"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react'\r\nimport {Formik, Form} from 'formik'\r\nimport MyInput from '../../components/inputs/MyInput'\r\nimport {Container, Typography, Button} from '@material-ui/core'\r\nimport * as Yup from 'yup'\r\nimport myFetch from '../../utils/myFetch'\r\nimport OrderContext from '@/context/OrderContext';\r\nimport AuthContext from '@/context/AuthContext';\r\nimport { STRIPE_PUBLISHED_KEY, API_DOMAIN } from '@/config/globals';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\n\r\nconst stripePromise = loadStripe(STRIPE_PUBLISHED_KEY);\r\n\r\nfunction address() {\r\n\r\n    const { getToken } = useContext(AuthContext);\r\n    const { order } = useContext(OrderContext);\r\n\r\n    const handleSubmit = async (values)=>{\r\n        if(!values.noExt) values.noExt = 0\r\n        const stripe = await stripePromise;\r\n\r\n        const address = await myFetch({method: 'POST', path: `/addresses`, body: values})\r\n        const responsee = await myFetch({method: 'POST', path: '/orders', body: {order, address: address.id}})\r\n\r\n        const session = await response.json();\r\n        const result = await stripe.redirectToCheckout({\r\n          sessionId: session.id\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"xs\">\r\n            <Typography variant=\"h5\" align=\"center\">DIRECCIÃ“N</Typography>\r\n            <Formik\r\n                initialValues = {{\r\n                    estado: '',\r\n                    delegacion: '',\r\n                    colonia: '',\r\n                    calle: '',\r\n                    noInt: 0,\r\n                    noExt: 0,\r\n                    cp: 0,\r\n                }}\r\n                onSubmit = {(values)=>handleSubmit(values)}\r\n                validationSchema = {\r\n                    Yup.object().shape({\r\n                        estado: Yup.string().required(),\r\n                        delegacion: Yup.string().required(),\r\n                        colonia: Yup.string().required(),\r\n                        calle: Yup.string().required(),\r\n                        noInt: Yup.number().min(1).required(),\r\n                        noExt: Yup.number(),\r\n                        cp: Yup.number().min(1).required(),\r\n                    })\r\n                }\r\n                >\r\n                <Form>\r\n                    <MyInput label=\"Estado\" name=\"estado\" />\r\n                    <MyInput label=\"DelegaciÃ³n\" name=\"delegacion\" />\r\n                    <MyInput label=\"Colonia\" name=\"colonia\" />\r\n                    <MyInput label=\"Calle\" name=\"calle\" />\r\n                    <MyInput label=\"No. Interior\" name=\"noInt\" />\r\n                    <MyInput label=\"No. Exterior\" name=\"noExt\" />\r\n                    <MyInput label=\"CÃ³digo Postal\" name=\"cp\" />\r\n                    <Button fullWidth type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        SAVE\r\n                    </Button>\r\n                </Form>\r\n            </Formik>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default address\r\n"]},"metadata":{},"sourceType":"module"}