{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/DELL/Desktop/A/cuatl-2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/DELL/Desktop/A/cuatl-2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { API_DOMAIN } from '@/config/globals';\n\nvar getSessionStorage = function getSessionStorage() {\n  try {\n    return JSON.parse(sessionStorage.getItem('session'));\n  } catch (_error) {\n    console.error(_error.message);\n    return null;\n  }\n};\n\nvar getToken = function getToken() {\n  return getSessionStorage().token;\n};\n\nfunction myFetch(_x) {\n  return _myFetch.apply(this, arguments);\n}\n\nfunction _myFetch() {\n  _myFetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var method, path, body, res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            method = _ref.method, path = _ref.path, body = _ref.body;\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch(API_DOMAIN + path, {\n              method: method,\n              body: JSON.stringify(body),\n              headers: {\n                'Content-type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': \"Bearer \".concat(getToken())\n              }\n            });\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0); //e.message = \"Fetch failed\"\n\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 11]]);\n  }));\n  return _myFetch.apply(this, arguments);\n}\n\nexport default myFetch;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/A/cuatl-2/utils/myFetch.js"],"names":["API_DOMAIN","getSessionStorage","JSON","parse","sessionStorage","getItem","_error","console","error","message","getToken","token","myFetch","method","path","body","fetch","stringify","headers","res","json","data","log"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,kBAA3B;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5B,MAAI;AACF,WAAOC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAX,CAAP;AACD,GAFD,CAEE,OAAOC,MAAP,EAAe;AACfC,IAAAA,OAAO,CAACC,KAAR,CAAeF,MAAD,CAASG,OAAvB;AACA,WAAO,IAAP;AACD;AACJ,CAPD;;AASA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAK;AAClB,SAAOT,iBAAiB,GAAGU,KAA3B;AACH,CAFD;;SAKeC,O;;;;;sEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyBC,YAAAA,MAAzB,QAAyBA,MAAzB,EAAiCC,IAAjC,QAAiCA,IAAjC,EAAuCC,IAAvC,QAAuCA,IAAvC;AAAA;AAAA;AAAA,mBAE0BC,KAAK,CAAChB,UAAU,GAACc,IAAZ,EAAkB;AACzCD,cAAAA,MAAM,EAAEA,MADiC;AAEzCE,cAAAA,IAAI,EAAEb,IAAI,CAACe,SAAL,CAAeF,IAAf,CAFmC;AAGzCG,cAAAA,OAAO,EAAE;AACL,gCAAgB,kBADX;AAEL,0BAAU,kBAFL;AAGL,kDAA2BR,QAAQ,EAAnC;AAHK;AAHgC,aAAlB,CAF/B;;AAAA;AAEcS,YAAAA,GAFd;AAAA;AAAA,mBAYqBA,GAAG,CAACC,IAAJ,EAZrB;;AAAA;AAYQC,YAAAA,IAZR;AAAA,6CAaeA,IAbf;;AAAA;AAAA;AAAA;AAeQd,YAAAA,OAAO,CAACe,GAAR,cAfR,CAgBQ;;AAhBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAqBA,eAAeV,OAAf","sourcesContent":["import { API_DOMAIN } from '@/config/globals';\r\n\r\nconst getSessionStorage = () => {\r\n    try {\r\n      return JSON.parse(sessionStorage.getItem('session'));\r\n    } catch (_error) {\r\n      console.error((_error).message);\r\n      return null;\r\n    }\r\n};\r\n\r\nconst getToken = ()=> {\r\n    return getSessionStorage().token;\r\n};\r\n\r\n\r\nasync function myFetch ({method, path, body}){\r\n    try{\r\n        const res = await fetch(API_DOMAIN+path, {\r\n        method: method,\r\n        body: JSON.stringify(body),\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n        });\r\n        let data;\r\n        data = await res.json();\r\n        return data;\r\n    }catch(e){\r\n        console.log(e)\r\n        //e.message = \"Fetch failed\"\r\n        return e\r\n    }\r\n}\r\n\r\nexport default myFetch;"]},"metadata":{},"sourceType":"module"}