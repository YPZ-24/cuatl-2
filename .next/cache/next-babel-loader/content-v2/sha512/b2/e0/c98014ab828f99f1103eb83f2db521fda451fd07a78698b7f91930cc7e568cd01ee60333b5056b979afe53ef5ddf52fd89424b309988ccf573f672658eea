{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\cuatl-2\\\\pages\\\\auth.tsx\";\nimport { useRouter } from 'next/router';\nimport { useContext, useEffect } from 'react';\nimport { getDepartments } from '@/actions/fetch-departments';\nimport { AUTH_GOOGLE_URL } from '@/config/globals';\nimport AuthContext from '@/context/AuthContext';\nimport { initializeApolloClient } from '@/lib/apollo-client';\nimport useViewport from '@/utils/use-viewport';\nimport { CardContent, Card, Typography, Button } from '@material-ui/core';\nconst styles = {\n  tailwind: {\n    pageContainer: `\n      flex\n      flex-col\n      flex-nowrap\n      h-screen\n      overflow-hidden\n      w-screen\n    `,\n    mainContent: {\n      container: `\n        flex-1\n        mb-24\n        md:mb-auto\n        md:overflow-visible\n        overflow-y-scroll\n        w-full\n      `,\n      loginForm: {\n        container: `\n          bg-bse\n          flex\n          flex-col\n          flex-nowrap\n          items-center\n          m-6\n          md:mx-auto\n          md:my-16\n          md:w-1/2\n          lg:w-1/3\n          p-6\n          rounded-xl\n          text-center\n          shadow\n        `,\n        title: `\n          font-bold\n          font-display\n          m-6\n          text-3xl\n        `,\n        group: `\n          my-6\n          w-full\n        `,\n        button: {\n          container: `\n            flex\n            flex-nowrap\n            flex-row\n            font-bold\n            h-16\n            items-center\n            justify-center\n            md:mx-auto\n            md:w-60\n            mt-6\n            rounded-lg\n            shadow\n            w-full\n          `,\n          icon: {\n            container: `\n              flex\n              flex-nowrap\n              flex-row\n              h-16\n              items-center\n              justify-center\n              w-16\n            `,\n            image: `\n              h-6\n              w-6\n            `\n          }\n        }\n      }\n    },\n    generic: {\n      facebook: `\n        bg-facebook\n        text-bse\n      `,\n      google: `\n        bg-inactive\n      `\n    }\n  }\n};\nexport default function AuthenticationPage({\n  departments\n}) {\n  const {\n    useSession,\n    isUserLoggedIn\n  } = useContext(AuthContext);\n  const router = useRouter();\n  const viewport = useViewport();\n  useEffect(() => {\n    if (isUserLoggedIn()) router.push('/');\n  }, []);\n  useSession();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        children: \"\\xA1Bienvenido!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        align: \"center\",\n        children: \"Ingresa y disfruta una gran experiencia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"outlined\",\n        color: \"default\",\n        href: AUTH_GOOGLE_URL,\n        children: \"INGRESA CON GOOGLE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n;\nexport const getServerSideProps = async () => {\n  const apolloClient = initializeApolloClient();\n  const departments = await getDepartments(apolloClient);\n  return {\n    props: {\n      departments\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/cuatl-2/pages/auth.tsx"],"names":["useRouter","useContext","useEffect","getDepartments","AUTH_GOOGLE_URL","AuthContext","initializeApolloClient","useViewport","CardContent","Card","Typography","Button","styles","tailwind","pageContainer","mainContent","container","loginForm","title","group","button","icon","image","generic","facebook","google","AuthenticationPage","departments","useSession","isUserLoggedIn","router","viewport","push","getServerSideProps","apolloClient","props"],"mappings":"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","sourcesContent":["import { GetServerSideProps } from 'next';\r\nimport Head from 'next/head';\r\nimport { useRouter } from 'next/router';\r\nimport { useContext, useEffect } from 'react';\r\n\r\nimport { getDepartments } from '@/actions/fetch-departments';\r\nimport facebookLogoImage from '@/assets/images/facebook.svg';\r\nimport googleLogoImage from '@/assets/images/google.svg';\r\nimport { AUTH_FACEBOOK_URL, AUTH_GOOGLE_URL } from '@/config/globals';\r\nimport AuthContext from '@/context/AuthContext';\r\nimport { initializeApolloClient } from '@/lib/apollo-client';\r\nimport useViewport from '@/utils/use-viewport';\r\n\r\nimport Omnibar from '@/components/navbars/Omnibar';\r\nimport Tabbar, { TAB_PAGES } from '@/components/navbars/Tabbar';\r\nimport { CardContent, Card, Typography, Button, SvgIcon } from '@material-ui/core';\r\nimport FacebookIcon from '@material-ui/icons/'\r\n\r\nconst styles = {\r\n  tailwind: {\r\n    pageContainer: `\r\n      flex\r\n      flex-col\r\n      flex-nowrap\r\n      h-screen\r\n      overflow-hidden\r\n      w-screen\r\n    `,\r\n    mainContent: {\r\n      container: `\r\n        flex-1\r\n        mb-24\r\n        md:mb-auto\r\n        md:overflow-visible\r\n        overflow-y-scroll\r\n        w-full\r\n      `,\r\n      loginForm: {\r\n        container: `\r\n          bg-bse\r\n          flex\r\n          flex-col\r\n          flex-nowrap\r\n          items-center\r\n          m-6\r\n          md:mx-auto\r\n          md:my-16\r\n          md:w-1/2\r\n          lg:w-1/3\r\n          p-6\r\n          rounded-xl\r\n          text-center\r\n          shadow\r\n        `,\r\n        title: `\r\n          font-bold\r\n          font-display\r\n          m-6\r\n          text-3xl\r\n        `,\r\n        group: `\r\n          my-6\r\n          w-full\r\n        `,\r\n        button: {\r\n          container: `\r\n            flex\r\n            flex-nowrap\r\n            flex-row\r\n            font-bold\r\n            h-16\r\n            items-center\r\n            justify-center\r\n            md:mx-auto\r\n            md:w-60\r\n            mt-6\r\n            rounded-lg\r\n            shadow\r\n            w-full\r\n          `,\r\n          icon: {\r\n            container: `\r\n              flex\r\n              flex-nowrap\r\n              flex-row\r\n              h-16\r\n              items-center\r\n              justify-center\r\n              w-16\r\n            `,\r\n            image: `\r\n              h-6\r\n              w-6\r\n            `\r\n          }\r\n        }\r\n      }\r\n    },\r\n    generic: {\r\n      facebook: `\r\n        bg-facebook\r\n        text-bse\r\n      `,\r\n      google: `\r\n        bg-inactive\r\n      `\r\n    }\r\n  }\r\n};\r\n\r\nexport default function AuthenticationPage({ departments }) {\r\n  const { useSession, isUserLoggedIn } = useContext(AuthContext);\r\n  const router = useRouter();\r\n  const viewport = useViewport();\r\n\r\n  useEffect(() => {\r\n    if (isUserLoggedIn()) router.push('/');\r\n  }, []);\r\n\r\n  useSession();\r\n\r\n  return (\r\n    <Card>\r\n        <CardContent>\r\n          <Typography variant=\"h4\" align=\"center\">Â¡Bienvenido!</Typography>\r\n          <Typography variant=\"body1\" align=\"center\">Ingresa y disfruta una gran experiencia</Typography>\r\n            <Button fullWidth variant=\"outlined\" color=\"default\" href={AUTH_GOOGLE_URL} >\r\n              INGRESA CON GOOGLE\r\n            </Button>\r\n        </CardContent>\r\n      </Card>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps: GetServerSideProps = async () => {\r\n  const apolloClient = initializeApolloClient();\r\n  const departments = await getDepartments(apolloClient);\r\n\r\n  return { props: { departments } };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}