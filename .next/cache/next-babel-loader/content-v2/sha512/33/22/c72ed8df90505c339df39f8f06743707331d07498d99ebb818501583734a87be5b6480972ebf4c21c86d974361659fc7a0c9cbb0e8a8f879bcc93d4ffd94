{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/DELL/Desktop/cuatl-2/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/DELL/Desktop/cuatl-2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/DELL/Desktop/cuatl-2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\cuatl-2\\\\pages\\\\store\\\\[filter].tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react/index';\nimport { getProductsPage } from '@/actions/fetch-products';\nimport LoadMoreButton from '@/components/buttons/LoadMoreButton';\nimport ProductsGallery from '@/components/galleries/ProductsGallery';\nimport Tabbar, { TAB_PAGES } from '@/components/navbars/Tabbar';\nimport { PAGE_LIMIT } from '@/config/globals';\nimport AuthContext from '@/context/AuthContext';\nimport { useApolloClient } from '@/lib/apollo-client';\nvar classes = {\n  container: \"\\n    h-screen\\n    max-w-screen\\n  \",\n  gallery: {\n    container: \"\\n      h-3/4\\n      md:h-auto\\n      md:overflow-visible\\n      overflow-y-auto\\n      px-7\\n      py-12\\n      top-0\\n      w-full\\n    \",\n    loadButton: \"\\n      flex\\n      flex-nowrap\\n      flex-row\\n      justify-center\\n      my-12\\n    \"\n  }\n};\nexport var __N_SSP = true;\nexport default function FilteredProductsPage(_ref) {\n  _s();\n\n  var initialProducts = _ref.initialProducts,\n      departments = _ref.departments,\n      query = _ref.query;\n\n  var _useContext = useContext(AuthContext),\n      useSession = _useContext.useSession;\n\n  var apolloClient = useApolloClient(initialProducts);\n\n  var _useState = useState({\n    index: 0,\n    data: initialProducts,\n    previousData: initialProducts\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var getNewPage = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var newPage;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getProductsPage(apolloClient, {\n                start: page.data.length,\n                limit: PAGE_LIMIT,\n                query: query\n              });\n\n            case 2:\n              newPage = _context.sent;\n              setPage({\n                index: page.index + 1,\n                data: page.data.concat(newPage),\n                previousData: newPage\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getNewPage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useSession();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.gallery.container,\n      children: [/*#__PURE__*/_jsxDEV(ProductsGallery, {\n        products: page.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.gallery.loadButton,\n        children: /*#__PURE__*/_jsxDEV(LoadMoreButton, {\n          disabled: !page.previousData.length,\n          fetcher: getNewPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabbar, {\n      page: TAB_PAGES.HOME\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FilteredProductsPage, \"hVZbGHLQEtUDCdXryvmqRRlRaaw=\", true, function () {\n  return [useApolloClient];\n});\n\n_c = FilteredProductsPage;\n;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilteredProductsPage\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/cuatl-2/pages/store/[filter].tsx"],"names":["useContext","useState","getProductsPage","LoadMoreButton","ProductsGallery","Tabbar","TAB_PAGES","PAGE_LIMIT","AuthContext","useApolloClient","classes","container","gallery","loadButton","FilteredProductsPage","initialProducts","departments","query","useSession","apolloClient","index","data","previousData","page","setPage","getNewPage","start","length","limit","newPage","concat","HOME"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,aAArC;AAEA,SAASC,eAAT,QAAgC,0BAAhC;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,eAAP,MAA4B,wCAA5B;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,6BAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAAiCC,eAAjC,QAAwD,qBAAxD;AAIA,IAAMC,OAAO,GAAG;AACdC,EAAAA,SAAS,wCADK;AAMdC,EAAAA,OAAO,EAAE;AACPD,IAAAA,SAAS,8IADF;AAWPE,IAAAA,UAAU;AAXH;AANK,CAAhB;;AA2BA,eAAe,SAASC,oBAAT,OAAuE;AAAA;;AAAA,MAAvCC,eAAuC,QAAvCA,eAAuC;AAAA,MAAtBC,WAAsB,QAAtBA,WAAsB;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,oBAC7DjB,UAAU,CAACQ,WAAD,CADmD;AAAA,MAC5EU,UAD4E,eAC5EA,UAD4E;;AAEpF,MAAMC,YAAY,GAAGV,eAAe,CAACM,eAAD,CAApC;;AAFoF,kBAG5Dd,QAAQ,CAAQ;AACtCmB,IAAAA,KAAK,EAAE,CAD+B;AAEtCC,IAAAA,IAAI,EAAEN,eAFgC;AAGtCO,IAAAA,YAAY,EAAEP;AAHwB,GAAR,CAHoD;AAAA;AAAA,MAG7EQ,IAH6E;AAAA,MAGvEC,OAHuE;;AASpF,MAAMC,UAAU;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACiBvB,eAAe,CAC/CiB,YAD+C,EACjC;AAAEO,gBAAAA,KAAK,EAAEH,IAAI,CAACF,IAAL,CAAUM,MAAnB;AAA2BC,gBAAAA,KAAK,EAAErB,UAAlC;AAA8CU,gBAAAA,KAAK,EAALA;AAA9C,eADiC,CADhC;;AAAA;AACXY,cAAAA,OADW;AAKjBL,cAAAA,OAAO,CAAC;AACNJ,gBAAAA,KAAK,EAAEG,IAAI,CAACH,KAAL,GAAa,CADd;AAENC,gBAAAA,IAAI,EAAEE,IAAI,CAACF,IAAL,CAAUS,MAAV,CAAiBD,OAAjB,CAFA;AAGNP,gBAAAA,YAAY,EAAEO;AAHR,eAAD,CAAP;;AALiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVJ,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAYAP,EAAAA,UAAU;AAEV,sBACE;AAAK,IAAA,SAAS,EAAER,OAAO,CAACC,SAAxB;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAED,OAAO,CAACE,OAAR,CAAgBD,SAAhC;AAAA,8BACE,QAAC,eAAD;AAAiB,QAAA,QAAQ,EAAEY,IAAI,CAACF;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAK,QAAA,SAAS,EAAEX,OAAO,CAACE,OAAR,CAAgBC,UAAhC;AAAA,+BACE,QAAC,cAAD;AACE,UAAA,QAAQ,EAAE,CAACU,IAAI,CAACD,YAAL,CAAkBK,MAD/B;AAEE,UAAA,OAAO,EAAEF;AAFX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEnB,SAAS,CAACyB;AAAxB;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAxCuBjB,oB;UAEDL,e;;;KAFCK,oB;AAwCvB;AAYA","sourcesContent":["import { useContext, useState } from 'react/index';\r\nimport { getDepartments } from '@/actions/fetch-departments';\r\nimport { getProductsPage } from '@/actions/fetch-products';\r\nimport LoadMoreButton from '@/components/buttons/LoadMoreButton';\r\nimport ProductsGallery from '@/components/galleries/ProductsGallery';\r\nimport Tabbar, { TAB_PAGES } from '@/components/navbars/Tabbar';\r\nimport { PAGE_LIMIT } from '@/config/globals';\r\nimport AuthContext from '@/context/AuthContext';\r\nimport { initializeApolloClient, useApolloClient } from '@/lib/apollo-client';\r\nimport IPage from '@/models/IPage';\r\nimport IProduct from '@/models/IProduct';\r\n\r\nconst classes = {\r\n  container: `\r\n    h-screen\r\n    max-w-screen\r\n  `,\r\n\r\n  gallery: {\r\n    container: `\r\n      h-3/4\r\n      md:h-auto\r\n      md:overflow-visible\r\n      overflow-y-auto\r\n      px-7\r\n      py-12\r\n      top-0\r\n      w-full\r\n    `,\r\n    loadButton: `\r\n      flex\r\n      flex-nowrap\r\n      flex-row\r\n      justify-center\r\n      my-12\r\n    `\r\n  }\r\n};\r\n\r\nexport default function FilteredProductsPage({ initialProducts, departments, query }) {\r\n  const { useSession } = useContext(AuthContext);\r\n  const apolloClient = useApolloClient(initialProducts);\r\n  const [page, setPage] = useState<IPage>({\r\n    index: 0,\r\n    data: initialProducts,\r\n    previousData: initialProducts\r\n  });\r\n\r\n  const getNewPage = async () => {\r\n    const newPage: IProduct[] = await getProductsPage(\r\n      apolloClient, { start: page.data.length, limit: PAGE_LIMIT, query }\r\n    );\r\n\r\n    setPage({\r\n      index: page.index + 1,\r\n      data: page.data.concat(newPage),\r\n      previousData: newPage\r\n    });\r\n  };\r\n\r\n  useSession();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n\r\n      <div className={classes.gallery.container}>\r\n        <ProductsGallery products={page.data} />\r\n\r\n        <div className={classes.gallery.loadButton}>\r\n          <LoadMoreButton\r\n            disabled={!page.previousData.length}\r\n            fetcher={getNewPage}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Tabbar page={TAB_PAGES.HOME} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport async function getServerSideProps({ query }) {\r\n  const apolloClient = initializeApolloClient();\r\n  const initialProducts = await getProductsPage(apolloClient, {\r\n    start: 0,\r\n    limit: PAGE_LIMIT,\r\n    query\r\n  });\r\n  const departments = await getDepartments(apolloClient);\r\n\r\n  return { props: { initialProducts, departments, query } };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}