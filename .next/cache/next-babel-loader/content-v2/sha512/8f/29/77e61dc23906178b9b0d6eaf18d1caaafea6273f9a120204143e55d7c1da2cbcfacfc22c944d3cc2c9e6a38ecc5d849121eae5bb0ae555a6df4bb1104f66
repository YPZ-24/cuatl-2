{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\C\\\\cuatl-2\\\\components\\\\controls\\\\VariantSelector.tsx\";\nimport PropTypes from 'prop-types';\nimport { useRef, useState } from 'react';\nimport { FormControl, Select, MenuItem } from '@material-ui/core';\nVariantSelector.propTypes = {\n  state: PropTypes.array,\n  variants: PropTypes.array\n};\nVariantSelector.defaultProps = {\n  state: [],\n  variants: []\n};\nconst classes = {\n  container: `\n    cursor-pointer\n    overflow-hidden\n    relative\n\n    rounded\n    shadow\n  `,\n  defaultItem: `\n    md:bg-inactive\n    md:px-4\n    md:py-2\n    md:text-secondary\n    p-2\n  `,\n  item: {\n    container: `\n      flex\n      flex-row\n      hover:bg-accent\n      hover:text-bse\n      items-center\n      justify-start\n      md:px-4\n      md:py-2\n      p-2\n    `,\n    colorSwatch: `\n      border-2\n      border-bse\n      h-7\n      md:mr-4\n      mr-2\n      rounded-full\n      w-7\n    `,\n    description: `\n      text-sm\n      uppercase\n    `\n  }\n};\nexport default function VariantSelector({\n  state,\n  variants\n}) {\n  const [selectedVariant, setSelectedVariant] = state;\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const dropdownIcon = useRef(null);\n\n  const animate = () => {\n    dropdownIcon.current.classList.toggle('animate-flipHorizontalBottom');\n    setVisible(!visible);\n  };\n\n  const handleChange = event => {\n    setSelectedVariant(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    variant: \"filled\",\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      labelId: \"demo-simple-select-filled-label\",\n      id: \"demo-simple-select-filled\",\n      value: selectedVariant,\n      onChange: handleChange,\n      children: variants.filter(variant => variant.stock > 0).map(variant => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: variant,\n        children: [variant.color, \", \", variant.size, \", \", variant.pattern]\n      }, variant.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/C/cuatl-2/components/controls/VariantSelector.tsx"],"names":["PropTypes","useRef","useState","FormControl","Select","MenuItem","VariantSelector","propTypes","state","array","variants","defaultProps","classes","container","defaultItem","item","colorSwatch","description","selectedVariant","setSelectedVariant","visible","setVisible","dropdownIcon","animate","current","classList","toggle","handleChange","event","target","value","filter","variant","stock","map","color","size","pattern","id"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AAIA,SAAQC,WAAR,EAAiCC,MAAjC,EAAyCC,QAAzC,QAAwD,mBAAxD;AAEAC,eAAe,CAACC,SAAhB,GAA4B;AAC1BC,EAAAA,KAAK,EAAER,SAAS,CAACS,KADS;AAE1BC,EAAAA,QAAQ,EAAEV,SAAS,CAACS;AAFM,CAA5B;AAKAH,eAAe,CAACK,YAAhB,GAA+B;AAC7BH,EAAAA,KAAK,EAAE,EADsB;AAE7BE,EAAAA,QAAQ,EAAE;AAFmB,CAA/B;AAKA,MAAME,OAAO,GAAG;AACdC,EAAAA,SAAS,EAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA,GARgB;AASdC,EAAAA,WAAW,EAAG;AAChB;AACA;AACA;AACA;AACA;AACA,GAfgB;AAgBdC,EAAAA,IAAI,EAAE;AACJF,IAAAA,SAAS,EAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAXQ;AAYJG,IAAAA,WAAW,EAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KApBQ;AAqBJC,IAAAA,WAAW,EAAG;AAClB;AACA;AACA;AAxBQ;AAhBQ,CAAhB;AA4CA,eAAe,SAASX,eAAT,CAAyB;AAAEE,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAzB,EAA8C;AAC3D,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCX,KAA9C;AACA,QAAM;AAAA,OAACY,OAAD;AAAA,OAAUC;AAAV,MAAwBnB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMoB,YAAY,GAAGrB,MAAM,CAAC,IAAD,CAA3B;;AAEA,QAAMsB,OAAO,GAAG,MAAY;AAC1BD,IAAAA,YAAY,CAACE,OAAb,CAAqBC,SAArB,CAA+BC,MAA/B,CAAsC,8BAAtC;AACAL,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAHD;;AAKA,QAAMO,YAAY,GAAIC,KAAD,IAAW;AAC9BT,IAAAA,kBAAkB,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AACD,GAFD;;AAIA,sBACE,QAAC,WAAD;AAAa,IAAA,OAAO,EAAC,QAArB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,iCADV;AAEE,MAAA,EAAE,EAAC,2BAFL;AAGE,MAAA,KAAK,EAAEZ,eAHT;AAIE,MAAA,QAAQ,EAAES,YAJZ;AAAA,gBAOIjB,QAAQ,CAACqB,MAAT,CAAiBC,OAAD,IAAaA,OAAO,CAACC,KAAR,GAAgB,CAA7C,EAAgDC,GAAhD,CAAqDF,OAAD,iBAClD,QAAC,QAAD;AAA2B,QAAA,KAAK,EAAEA,OAAlC;AAAA,mBAA4CA,OAAO,CAACG,KAApD,QAA6DH,OAAO,CAACI,IAArE,QAA6EJ,OAAO,CAACK,OAArF;AAAA,SAAeL,OAAO,CAACM,EAAvB;AAAA;AAAA;AAAA;AAAA,cADF;AAPJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;AAAA","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useRef, useState } from 'react';\r\nimport { ChevronDown } from 'react-feather';\r\n\r\nimport colors from '@/data/colors.json';\r\nimport {FormControl, InputLabel, Select, MenuItem} from '@material-ui/core'\r\n\r\nVariantSelector.propTypes = {\r\n  state: PropTypes.array,\r\n  variants: PropTypes.array\r\n};\r\n\r\nVariantSelector.defaultProps = {\r\n  state: [],\r\n  variants: []\r\n};\r\n\r\nconst classes = {\r\n  container: `\r\n    cursor-pointer\r\n    overflow-hidden\r\n    relative\r\n\r\n    rounded\r\n    shadow\r\n  `,\r\n  defaultItem: `\r\n    md:bg-inactive\r\n    md:px-4\r\n    md:py-2\r\n    md:text-secondary\r\n    p-2\r\n  `,\r\n  item: {\r\n    container: `\r\n      flex\r\n      flex-row\r\n      hover:bg-accent\r\n      hover:text-bse\r\n      items-center\r\n      justify-start\r\n      md:px-4\r\n      md:py-2\r\n      p-2\r\n    `,\r\n    colorSwatch: `\r\n      border-2\r\n      border-bse\r\n      h-7\r\n      md:mr-4\r\n      mr-2\r\n      rounded-full\r\n      w-7\r\n    `,\r\n    description: `\r\n      text-sm\r\n      uppercase\r\n    `\r\n  }\r\n};\r\n\r\nexport default function VariantSelector({ state, variants }) {\r\n  const [selectedVariant, setSelectedVariant] = state;\r\n  const [visible, setVisible] = useState(false);\r\n  const dropdownIcon = useRef(null);\r\n\r\n  const animate = (): void => {\r\n    dropdownIcon.current.classList.toggle('animate-flipHorizontalBottom');\r\n    setVisible(!visible);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedVariant(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormControl variant=\"filled\">\r\n      <Select\r\n        labelId=\"demo-simple-select-filled-label\"\r\n        id=\"demo-simple-select-filled\"\r\n        value={selectedVariant}\r\n        onChange={handleChange}\r\n      >\r\n        {\r\n          variants.filter((variant) => variant.stock > 0).map((variant) => (\r\n            <MenuItem key={variant.id} value={variant}>{variant.color}, {variant.size}, {variant.pattern}</MenuItem>\r\n          ))\r\n        }\r\n        \r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}