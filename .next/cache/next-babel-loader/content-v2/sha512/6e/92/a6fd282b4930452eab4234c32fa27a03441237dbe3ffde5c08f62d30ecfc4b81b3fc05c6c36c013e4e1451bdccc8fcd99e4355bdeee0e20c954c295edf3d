{"ast":null,"code":"import { gql } from '@apollo/client';\n;\nexport const getProductsPage = async (apolloClient, filter) => {\n  const formatFilters = () => {\n    let formattedFilters = '';\n\n    if (filter.query) {\n      if (filter.query.department) {\n        formattedFilters += `\n          departments: { slug: \"${filter.query.department}\" }\n        `;\n      }\n\n      if (filter.query.category) {\n        formattedFilters += `\n          categories: { slug: \"${filter.query.category}\" }\n        `;\n      }\n\n      if (filter.query.subcategory) {\n        formattedFilters += `\n          subcategories: { slug: \"${filter.query.subcategory}\" }\n        `;\n      }\n    }\n\n    return formattedFilters;\n  };\n\n  const {\n    error,\n    data\n  } = await apolloClient.query({\n    query: gql`\n      query getProductsPage(\n        $where: JSON! = {\n          active: true\n          ${formatFilters()}\n        }\n      ) {\n        products(start: ${filter.start}, limit: ${filter.limit}, where: $where) {\n          id\n          slug\n          name\n          price\n          offers(where: { active: true }) {\n            id\n          }\n          cover {\n            alternativeText\n            url\n          }\n        }\n      }\n    `\n  });\n  return error !== null && error !== void 0 ? error : data.products.filter(product => product !== null);\n};\nexport const getProductBySlug = async (apolloClient, slug) => {\n  const {\n    error,\n    data,\n    loading\n  } = await apolloClient.query({\n    query: gql`\n      query getProduct($where: JSON! = { active: true, slug: \"${slug}\" }) {\n        products(where: $where) {\n          id\n          name\n          description\n          media {\n            mime\n            url\n          }\n          meta_description\n          meta_title\n          offers(where: { active: true }) {\n            id\n            name\n            description\n            discount\n          }\n          price\n          variants(where: {active: true}) {\n            id\n            color\n            pattern\n            size\n            stock\n          }\n        }\n      }\n    `\n  });\n  return error !== null && error !== void 0 ? error : data.products[0];\n};","map":null,"metadata":{},"sourceType":"module"}