{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/DELL/Desktop/cuatl-2/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/DELL/Desktop/cuatl-2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/DELL/Desktop/cuatl-2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\cuatl-2\\\\pages\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react/index';\nimport { getProductsPage } from '@/actions/fetch-products';\nimport LoadMoreButton from '@/components/buttons/LoadMoreButton';\nimport { PAGE_LIMIT } from '@/config/globals';\nimport { useApolloClient } from '@/lib/apollo-client';\nimport PaymentButton from '@/components/buttons/PaymentButton';\nexport var __N_SSP = true;\nexport default function HomePage(_ref) {\n  _s();\n\n  var initialProducts = _ref.initialProducts;\n  var apolloClient = useApolloClient(initialProducts);\n\n  var _useState = useState({\n    index: 0,\n    data: initialProducts,\n    previousData: initialProducts\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var getNewPage = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var newPage;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getProductsPage(apolloClient, {\n                start: page.data.length,\n                limit: PAGE_LIMIT\n              });\n\n            case 2:\n              newPage = _context.sent;\n              setPage({\n                index: page.index + 1,\n                data: page.data.concat(newPage),\n                previousData: newPage\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getNewPage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PaymentButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), !page.previousData.length ? /*#__PURE__*/_jsxDEV(LoadMoreButton, {\n      fetcher: getNewPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(HomePage, \"hDytRZP519C4TBCjlnDQL8IVGK8=\", false, function () {\n  return [useApolloClient];\n});\n\n_c = HomePage;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/cuatl-2/pages/index.tsx"],"names":["useState","getProductsPage","LoadMoreButton","PAGE_LIMIT","useApolloClient","PaymentButton","HomePage","initialProducts","apolloClient","index","data","previousData","page","setPage","getNewPage","start","length","limit","newPage","concat"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAiCC,eAAjC,QAAwD,qBAAxD;AAIA,OAAOC,aAAP,MAA0B,oCAA1B;;AAEA,eAAe,SAASC,QAAT,OAAuC;AAAA;;AAAA,MAAnBC,eAAmB,QAAnBA,eAAmB;AAEpD,MAAMC,YAAY,GAAGJ,eAAe,CAACG,eAAD,CAApC;;AAFoD,kBAG5BP,QAAQ,CAAQ;AACtCS,IAAAA,KAAK,EAAE,CAD+B;AAEtCC,IAAAA,IAAI,EAAEH,eAFgC;AAGtCI,IAAAA,YAAY,EAAEJ;AAHwB,GAAR,CAHoB;AAAA;AAAA,MAG7CK,IAH6C;AAAA,MAGvCC,OAHuC;;AASpD,MAAMC,UAAU;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACiBb,eAAe,CAC/CO,YAD+C,EACjC;AAAEO,gBAAAA,KAAK,EAAEH,IAAI,CAACF,IAAL,CAAUM,MAAnB;AAA2BC,gBAAAA,KAAK,EAAEd;AAAlC,eADiC,CADhC;;AAAA;AACXe,cAAAA,OADW;AAKjBL,cAAAA,OAAO,CAAC;AACNJ,gBAAAA,KAAK,EAAEG,IAAI,CAACH,KAAL,GAAa,CADd;AAENC,gBAAAA,IAAI,EAAEE,IAAI,CAACF,IAAL,CAAUS,MAAV,CAAiBD,OAAjB,CAFA;AAGNP,gBAAAA,YAAY,EAAEO;AAHR,eAAD,CAAP;;AALiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVJ,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAYA,sBACE;AAAA,4BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAGG,CAACF,IAAI,CAACD,YAAL,CAAkBK,MAAnB,gBACC,QAAC,cAAD;AACE,MAAA,OAAO,EAAEF;AADX;AAAA;AAAA;AAAA;AAAA,YADD,GAIC,IAPJ;AAAA,kBADF;AAYD;;GAjCuBR,Q;UAEDF,e;;;KAFCE,Q;AAiCvB","sourcesContent":["import { useState } from 'react/index';\r\nimport { getProductsPage } from '@/actions/fetch-products';\r\nimport LoadMoreButton from '@/components/buttons/LoadMoreButton';\r\nimport ProductsGallery from '@/components/galleries/ProductsGallery';\r\nimport { PAGE_LIMIT } from '@/config/globals';\r\nimport { initializeApolloClient, useApolloClient } from '@/lib/apollo-client';\r\nimport IPage from '@/models/IPage';\r\nimport IProduct from '@/models/IProduct';\r\nimport { GetServerSideProps } from 'next';\r\nimport PaymentButton from '@/components/buttons/PaymentButton';\r\n\r\nexport default function HomePage({ initialProducts }) {\r\n\r\n  const apolloClient = useApolloClient(initialProducts);\r\n  const [page, setPage] = useState<IPage>({\r\n    index: 0,\r\n    data: initialProducts,\r\n    previousData: initialProducts\r\n  });\r\n\r\n  const getNewPage = async () => {\r\n    const newPage: IProduct[] = await getProductsPage(\r\n      apolloClient, { start: page.data.length, limit: PAGE_LIMIT }\r\n    );\r\n\r\n    setPage({\r\n      index: page.index + 1,\r\n      data: page.data.concat(newPage),\r\n      previousData: newPage\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PaymentButton/>\r\n      \r\n      {!page.previousData.length ? \r\n        <LoadMoreButton\r\n          fetcher={getNewPage}\r\n        />\r\n      : null}\r\n    </>\r\n  );\r\n  \r\n};\r\n\r\nexport const getServerSideProps: GetServerSideProps = async () => {\r\n  const apolloClient = initializeApolloClient();\r\n  const initialProducts = await getProductsPage(apolloClient, {\r\n    start: 0,\r\n    limit: PAGE_LIMIT\r\n  });\r\n  return { props: { initialProducts } };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}