{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\C\\\\cuatl-2\\\\components\\\\controls\\\\VariantSelector.tsx\";\nimport PropTypes from 'prop-types';\nimport { useRef, useState } from 'react';\nimport { ChevronDown } from 'react-feather';\nimport colors from '@/data/colors.json';\nVariantSelector.propTypes = {\n  state: PropTypes.array,\n  variants: PropTypes.array\n};\nVariantSelector.defaultProps = {\n  state: [],\n  variants: []\n};\nconst classes = {\n  container: `\n    cursor-pointer\n    overflow-hidden\n    relative\n\n    rounded\n    shadow\n  `,\n  defaultItem: `\n    md:bg-inactive\n    md:px-4\n    md:py-2\n    md:text-secondary\n    p-2\n  `,\n  item: {\n    container: `\n      flex\n      flex-row\n      hover:bg-accent\n      hover:text-bse\n      items-center\n      justify-start\n      md:px-4\n      md:py-2\n      p-2\n    `,\n    colorSwatch: `\n      border-2\n      border-bse\n      h-7\n      md:mr-4\n      mr-2\n      rounded-full\n      w-7\n    `,\n    description: `\n      text-sm\n      uppercase\n    `\n  }\n};\nexport default function VariantSelector({\n  state,\n  variants\n}) {\n  const [selectedVariant, setSelectedVariant] = state;\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const dropdownIcon = useRef(null);\n\n  const animate = () => {\n    dropdownIcon.current.classList.toggle('animate-flipHorizontalBottom');\n    setVisible(!visible);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: animate,\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [!selectedVariant ? /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.defaultItem,\n        children: \"Selecciona\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.item.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: colors[selectedVariant.color.trim().toLowerCase()]\n          },\n          className: classes.item.colorSwatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: classes.item.description,\n          children: [selectedVariant.color, \", \", selectedVariant.size, \", \", selectedVariant.pattern]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), visible && variants.filter(variant => variant.stock > 0).map(variant => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.item.container + 'bg-inactive',\n        onClick: () => setSelectedVariant(variant),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.item.colorSwatch,\n          style: {\n            backgroundColor: colors[variant.color.trim().toLowerCase()]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: classes.item.description,\n          children: [variant.color, \", \", variant.size, \", \", variant.pattern]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, variant.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: dropdownIcon,\n      className: \"absolute right-4 top-2\",\n      children: /*#__PURE__*/_jsxDEV(ChevronDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/C/cuatl-2/components/controls/VariantSelector.tsx"],"names":["PropTypes","useRef","useState","ChevronDown","colors","VariantSelector","propTypes","state","array","variants","defaultProps","classes","container","defaultItem","item","colorSwatch","description","selectedVariant","setSelectedVariant","visible","setVisible","dropdownIcon","animate","current","classList","toggle","backgroundColor","color","trim","toLowerCase","size","pattern","filter","variant","stock","map","id"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useRef, useState } from 'react';\r\nimport { ChevronDown } from 'react-feather';\r\n\r\nimport colors from '@/data/colors.json';\r\n\r\nVariantSelector.propTypes = {\r\n  state: PropTypes.array,\r\n  variants: PropTypes.array\r\n};\r\n\r\nVariantSelector.defaultProps = {\r\n  state: [],\r\n  variants: []\r\n};\r\n\r\nconst classes = {\r\n  container: `\r\n    cursor-pointer\r\n    overflow-hidden\r\n    relative\r\n\r\n    rounded\r\n    shadow\r\n  `,\r\n  defaultItem: `\r\n    md:bg-inactive\r\n    md:px-4\r\n    md:py-2\r\n    md:text-secondary\r\n    p-2\r\n  `,\r\n  item: {\r\n    container: `\r\n      flex\r\n      flex-row\r\n      hover:bg-accent\r\n      hover:text-bse\r\n      items-center\r\n      justify-start\r\n      md:px-4\r\n      md:py-2\r\n      p-2\r\n    `,\r\n    colorSwatch: `\r\n      border-2\r\n      border-bse\r\n      h-7\r\n      md:mr-4\r\n      mr-2\r\n      rounded-full\r\n      w-7\r\n    `,\r\n    description: `\r\n      text-sm\r\n      uppercase\r\n    `\r\n  }\r\n};\r\n\r\nexport default function VariantSelector({ state, variants }) {\r\n  const [selectedVariant, setSelectedVariant] = state;\r\n  const [visible, setVisible] = useState(false);\r\n  const dropdownIcon = useRef(null);\r\n\r\n  const animate = (): void => {\r\n    dropdownIcon.current.classList.toggle('animate-flipHorizontalBottom');\r\n    setVisible(!visible);\r\n  };\r\n\r\n  return (\r\n    <div onClick={animate} className={classes.container}>\r\n      <ul>\r\n        {\r\n          !selectedVariant\r\n            ?\r\n            <li className={classes.defaultItem}>\r\n              Selecciona\r\n            </li>\r\n            :\r\n            <li className={classes.item.container}>\r\n              <div style={{\r\n                backgroundColor: colors[selectedVariant.color.trim().toLowerCase()]\r\n              }}\r\n                className={classes.item.colorSwatch}\r\n              ></div>\r\n\r\n              <small className={classes.item.description}>\r\n                {selectedVariant.color}, {selectedVariant.size}, {selectedVariant.pattern}\r\n              </small>\r\n            </li>\r\n        }\r\n\r\n        {\r\n          visible &&\r\n          variants.filter((variant) => variant.stock > 0).map((variant) => (\r\n            <li\r\n              key={variant.id}\r\n              className={classes.item.container + 'bg-inactive'}\r\n              onClick={() => setSelectedVariant(variant)}\r\n            >\r\n              <div\r\n                className={classes.item.colorSwatch}\r\n                style={{ backgroundColor: colors[variant.color.trim().toLowerCase()] }}\r\n              ></div>\r\n\r\n              <small className={classes.item.description}>\r\n                {variant.color}, {variant.size}, {variant.pattern}\r\n              </small>\r\n            </li>\r\n          ))\r\n        }\r\n      </ul>\r\n\r\n\r\n      <span ref={dropdownIcon} className=\"absolute right-4 top-2\">\r\n        <ChevronDown />\r\n      </span>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}