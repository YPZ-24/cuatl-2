{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/DELL/Desktop/cuatl-2/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/DELL/Desktop/cuatl-2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar URL = 'http://localhost:8000/api';\n\nfunction myFetch(_x) {\n  return _myFetch.apply(this, arguments);\n}\n\nfunction _myFetch() {\n  _myFetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var method, path, body, res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            method = _ref.method, path = _ref.path, body = _ref.body;\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch(URL + path, {\n              method: method,\n              body: JSON.stringify(body),\n              headers: {\n                'Content-type': 'application/json',\n                'Accept': 'application/json'\n              }\n            });\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 11]]);\n  }));\n  return _myFetch.apply(this, arguments);\n}\n\nexport default myFetch;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/cuatl-2/utils/myFetch.js"],"names":["URL","myFetch","method","path","body","fetch","JSON","stringify","headers","res","json","data"],"mappings":";;AAAA,IAAMA,GAAG,GAAG,2BAAZ;;SAEeC,O;;;;;sEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyBC,YAAAA,MAAzB,QAAyBA,MAAzB,EAAiCC,IAAjC,QAAiCA,IAAjC,EAAuCC,IAAvC,QAAuCA,IAAvC;AAAA;AAAA;AAAA,mBAE0BC,KAAK,CAACL,GAAG,GAACG,IAAL,EAAW;AAClCD,cAAAA,MAAM,EAAEA,MAD0B;AAElCE,cAAAA,IAAI,EAAEE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAF4B;AAGlCI,cAAAA,OAAO,EAAE;AACL,gCAAgB,kBADX;AAEL,0BAAU;AAFL;AAHyB,aAAX,CAF/B;;AAAA;AAEcC,YAAAA,GAFd;AAAA;AAAA,mBAWqBA,GAAG,CAACC,IAAJ,EAXrB;;AAAA;AAWQC,YAAAA,IAXR;AAAA,6CAYeA,IAZf;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAmBA,eAAeV,OAAf","sourcesContent":["const URL = 'http://localhost:8000/api'\r\n\r\nasync function myFetch ({method, path, body}){\r\n    try{\r\n        const res = await fetch(URL+path, {\r\n        method: method,\r\n        body: JSON.stringify(body),\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'Accept': 'application/json',\r\n        }\r\n        });\r\n        let data;\r\n        data = await res.json();\r\n        return data;\r\n    }catch(e){\r\n        //e.message = \"Fetch failed\"\r\n        return e\r\n    }\r\n}\r\n\r\nexport default myFetch;"]},"metadata":{},"sourceType":"module"}