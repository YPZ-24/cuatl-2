{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\cuatl-2\\\\pages\\\\user\\\\orders.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { API_DOMAIN } from '@/config/globals';\nimport AuthContext from '@/context/AuthContext';\nimport { Accordion, AccordionSummary, Typography, AccordionDetails, Grid, Divider, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nfunction orders() {\n  const {\n    getToken\n  } = useContext(AuthContext);\n  const {\n    0: userOrders,\n    1: setUserOrders\n  } = useState([]);\n  console.log(\"USER ORDERS\");\n  console.log(userOrders);\n\n  async function getUserOrders() {\n    const token = await getToken();\n    const response = await (await fetch(`${API_DOMAIN}/orders`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    })).json();\n    setUserOrders(response);\n  }\n\n  useEffect(() => {\n    getUserOrders();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: userOrders.map(o => /*#__PURE__*/_jsxDEV(Accordion, {\n      children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n        expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 55\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"overline\",\n              children: o.createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"subtitle1\",\n              children: o.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"subtitle2\",\n              children: o.total\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 1,\n            children: /*#__PURE__*/_jsxDEV(Divider, {\n              orientation: \"vertical\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            style: {\n              display: \"flex\",\n              alignItems: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: o.delivery_status.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"ARTICULO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"COLOR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"TAMA\\xD1O\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: o.variants.map(v => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: v.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: v.color\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: v.size\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 45\n              }, this)]\n            }, `Variant-${v.id}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this)]\n    }, `Order-${o.id}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this))\n  }, void 0, false);\n}\n\nexport default orders;\n/*\r\n{\r\n                userOrders.map((o)=>(\r\n                    <div key={`Order-${o.id}`}>\r\n                        <div>\r\n                            <p>{o.createdAt}</p>\r\n                            <p>{o.delivery_status}</p>\r\n                            <p>{o.pagada}</p>\r\n                            <p>{o.total}</p>\r\n                        </div>\r\n                        {o.variants.map((v)=>(\r\n                            <div key={`Variant-${v.id}`}>\r\n                                <p>{v.name}</p>\r\n                                <p>{v.color}</p>\r\n                                <p>{v.size}</p>\r\n                            </div>\r\n                        ))}\r\n                        <hr/>\r\n                    </div>\r\n                ))\r\n            }\r\n\r\n\r\n\r\n*/","map":{"version":3,"sources":["C:/Users/DELL/Desktop/cuatl-2/pages/user/orders.js"],"names":["React","useContext","useEffect","useState","API_DOMAIN","AuthContext","Accordion","AccordionSummary","Typography","AccordionDetails","Grid","Divider","Table","TableHead","TableBody","TableRow","TableCell","ExpandMoreIcon","orders","getToken","userOrders","setUserOrders","console","log","getUserOrders","token","response","fetch","method","headers","json","map","o","createdAt","status","total","display","alignItems","delivery_status","toUpperCase","variants","v","name","color","size","id"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\r\nimport { API_DOMAIN } from '@/config/globals';\r\nimport AuthContext from '@/context/AuthContext';\r\nimport { Accordion, AccordionSummary, Typography, AccordionDetails, Grid, Divider, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\n\r\nfunction orders() {\r\n\r\n    const { getToken } = useContext(AuthContext);\r\n    const [userOrders, setUserOrders] = useState([])\r\n    console.log(\"USER ORDERS\")\r\n    console.log(userOrders)\r\n\r\n    async function getUserOrders(){\r\n        const token = await getToken();\r\n        const response = await (await fetch(`${API_DOMAIN}/orders`, {\r\n            method: 'GET',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${token}`\r\n            }\r\n          })).json()\r\n          setUserOrders(response)\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        getUserOrders()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                userOrders.map((o)=>(\r\n                    <Accordion  key={`Order-${o.id}`} >\r\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />} >\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={8}>\r\n                            <Typography gutterBottom variant=\"overline\" >{o.createdAt}</Typography>\r\n                            <Typography gutterBottom variant=\"subtitle1\" >{o.status}</Typography>\r\n                            <Typography gutterBottom variant=\"subtitle2\" >{o.total}</Typography>\r\n                          </Grid>\r\n                          <Grid item xs={1}>\r\n                            <Divider orientation=\"vertical\" />\r\n                          </Grid>\r\n                          <Grid item xs={3} style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\"\r\n                            }}\r\n                          >\r\n                            <Typography variant=\"h5\">{o.delivery_status.toUpperCase()}</Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        \r\n                        </AccordionSummary>\r\n\r\n                        <AccordionDetails>\r\n                            <Table size=\"small\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\" >\r\n                                            ARTICULO\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            COLOR\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            TAMAÑO\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {o.variants.map((v)=>(\r\n                                        <TableRow key={`Variant-${v.id}`}>\r\n                                            <TableCell>\r\n                                                {v.name}\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                {v.color}\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                {v.size}\r\n                                            </TableCell>\r\n                                        </TableRow>      \r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </AccordionDetails>         \r\n                    </Accordion>\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default orders\r\n\r\n\r\n/*\r\n{\r\n                userOrders.map((o)=>(\r\n                    <div key={`Order-${o.id}`}>\r\n                        <div>\r\n                            <p>{o.createdAt}</p>\r\n                            <p>{o.delivery_status}</p>\r\n                            <p>{o.pagada}</p>\r\n                            <p>{o.total}</p>\r\n                        </div>\r\n                        {o.variants.map((v)=>(\r\n                            <div key={`Variant-${v.id}`}>\r\n                                <p>{v.name}</p>\r\n                                <p>{v.color}</p>\r\n                                <p>{v.size}</p>\r\n                            </div>\r\n                        ))}\r\n                        <hr/>\r\n                    </div>\r\n                ))\r\n            }\r\n\r\n\r\n\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}