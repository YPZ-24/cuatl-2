{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Cu\\\\cuatl-2\\\\pages\\\\store\\\\[filter].tsx\";\nimport { useState } from 'react/index';\nimport { getDepartments } from '@/actions/fetch-departments';\nimport { getProductsPage } from '@/actions/fetch-products';\nimport LoadMoreButton from '@/components/buttons/LoadMoreButton';\nimport ProductsGallery from '@/components/galleries/ProductsGallery';\nimport { PAGE_LIMIT } from '@/config/globals';\nimport { initializeApolloClient, useApolloClient } from '@/lib/apollo-client';\nconst classes = {\n  container: `\n    h-screen\n    max-w-screen\n  `,\n  gallery: {\n    container: `\n      h-3/4\n      md:h-auto\n      md:overflow-visible\n      overflow-y-auto\n      px-7\n      py-12\n      top-0\n      w-full\n    `,\n    loadButton: `\n      flex\n      flex-nowrap\n      flex-row\n      justify-center\n      my-12\n    `\n  }\n};\nexport default function FilteredProductsPage({\n  initialProducts,\n  departments,\n  query\n}) {\n  const apolloClient = useApolloClient(initialProducts);\n  const [page, setPage] = useState({\n    index: 0,\n    data: initialProducts,\n    previousData: initialProducts\n  });\n\n  const getNewPage = async () => {\n    const newPage = await getProductsPage(apolloClient, {\n      start: page.data.length,\n      limit: PAGE_LIMIT,\n      query\n    });\n    setPage({\n      index: page.index + 1,\n      data: page.data.concat(newPage),\n      previousData: newPage\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ProductsGallery, {\n      products: page.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), page.previousData.length ? /*#__PURE__*/_jsxDEV(LoadMoreButton, {\n      fetcher: getNewPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n}\n;\nexport async function getServerSideProps({\n  query\n}) {\n  const apolloClient = initializeApolloClient();\n  const initialProducts = await getProductsPage(apolloClient, {\n    start: 0,\n    limit: PAGE_LIMIT,\n    query\n  });\n  const departments = await getDepartments(apolloClient);\n  return {\n    props: {\n      initialProducts,\n      departments,\n      query\n    }\n  };\n}\n;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/Cu/cuatl-2/pages/store/[filter].tsx"],"names":["useState","getDepartments","getProductsPage","LoadMoreButton","ProductsGallery","PAGE_LIMIT","initializeApolloClient","useApolloClient","classes","container","gallery","loadButton","FilteredProductsPage","initialProducts","departments","query","apolloClient","page","setPage","index","data","previousData","getNewPage","newPage","start","length","limit","concat","getServerSideProps","props"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,eAAP,MAA4B,wCAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,sBAAT,EAAiCC,eAAjC,QAAwD,qBAAxD;AAIA,MAAMC,OAAO,GAAG;AACdC,EAAAA,SAAS,EAAG;AACd;AACA;AACA,GAJgB;AAMdC,EAAAA,OAAO,EAAE;AACPD,IAAAA,SAAS,EAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAVW;AAWPE,IAAAA,UAAU,EAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AAjBW;AANK,CAAhB;AA2BA,eAAe,SAASC,oBAAT,CAA8B;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,WAAnB;AAAgCC,EAAAA;AAAhC,CAA9B,EAAuE;AACpF,QAAMC,YAAY,GAAGT,eAAe,CAACM,eAAD,CAApC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAQ;AACtCmB,IAAAA,KAAK,EAAE,CAD+B;AAEtCC,IAAAA,IAAI,EAAEP,eAFgC;AAGtCQ,IAAAA,YAAY,EAAER;AAHwB,GAAR,CAAhC;;AAMA,QAAMS,UAAU,GAAG,YAAY;AAC7B,UAAMC,OAAmB,GAAG,MAAMrB,eAAe,CAC/Cc,YAD+C,EACjC;AAAEQ,MAAAA,KAAK,EAAEP,IAAI,CAACG,IAAL,CAAUK,MAAnB;AAA2BC,MAAAA,KAAK,EAAErB,UAAlC;AAA8CU,MAAAA;AAA9C,KADiC,CAAjD;AAIAG,IAAAA,OAAO,CAAC;AACNC,MAAAA,KAAK,EAAEF,IAAI,CAACE,KAAL,GAAa,CADd;AAENC,MAAAA,IAAI,EAAEH,IAAI,CAACG,IAAL,CAAUO,MAAV,CAAiBJ,OAAjB,CAFA;AAGNF,MAAAA,YAAY,EAAEE;AAHR,KAAD,CAAP;AAKD,GAVD;;AAYA,sBACE;AAAA,4BACE,QAAC,eAAD;AAAiB,MAAA,QAAQ,EAAEN,IAAI,CAACG;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGH,IAAI,CAACI,YAAL,CAAkBI,MAAlB,gBACC,QAAC,cAAD;AACE,MAAA,OAAO,EAAEH;AADX;AAAA;AAAA;AAAA;AAAA,YADD,GAIC,IANJ;AAAA,kBADF;AAUD;AAAA;AAED,OAAO,eAAeM,kBAAf,CAAkC;AAAEb,EAAAA;AAAF,CAAlC,EAA6C;AAClD,QAAMC,YAAY,GAAGV,sBAAsB,EAA3C;AACA,QAAMO,eAAe,GAAG,MAAMX,eAAe,CAACc,YAAD,EAAe;AAC1DQ,IAAAA,KAAK,EAAE,CADmD;AAE1DE,IAAAA,KAAK,EAAErB,UAFmD;AAG1DU,IAAAA;AAH0D,GAAf,CAA7C;AAKA,QAAMD,WAAW,GAAG,MAAMb,cAAc,CAACe,YAAD,CAAxC;AAEA,SAAO;AAAEa,IAAAA,KAAK,EAAE;AAAEhB,MAAAA,eAAF;AAAmBC,MAAAA,WAAnB;AAAgCC,MAAAA;AAAhC;AAAT,GAAP;AACD;AAAA","sourcesContent":["import { useState } from 'react/index';\r\nimport { getDepartments } from '@/actions/fetch-departments';\r\nimport { getProductsPage } from '@/actions/fetch-products';\r\nimport LoadMoreButton from '@/components/buttons/LoadMoreButton';\r\nimport ProductsGallery from '@/components/galleries/ProductsGallery';\r\nimport { PAGE_LIMIT } from '@/config/globals';\r\nimport { initializeApolloClient, useApolloClient } from '@/lib/apollo-client';\r\nimport IPage from '@/models/IPage';\r\nimport IProduct from '@/models/IProduct';\r\n\r\nconst classes = {\r\n  container: `\r\n    h-screen\r\n    max-w-screen\r\n  `,\r\n\r\n  gallery: {\r\n    container: `\r\n      h-3/4\r\n      md:h-auto\r\n      md:overflow-visible\r\n      overflow-y-auto\r\n      px-7\r\n      py-12\r\n      top-0\r\n      w-full\r\n    `,\r\n    loadButton: `\r\n      flex\r\n      flex-nowrap\r\n      flex-row\r\n      justify-center\r\n      my-12\r\n    `\r\n  }\r\n};\r\n\r\nexport default function FilteredProductsPage({ initialProducts, departments, query }) {\r\n  const apolloClient = useApolloClient(initialProducts);\r\n  const [page, setPage] = useState<IPage>({\r\n    index: 0,\r\n    data: initialProducts,\r\n    previousData: initialProducts\r\n  });\r\n\r\n  const getNewPage = async () => {\r\n    const newPage: IProduct[] = await getProductsPage(\r\n      apolloClient, { start: page.data.length, limit: PAGE_LIMIT, query }\r\n    );\r\n\r\n    setPage({\r\n      index: page.index + 1,\r\n      data: page.data.concat(newPage),\r\n      previousData: newPage\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ProductsGallery products={page.data} />\r\n      {page.previousData.length ? \r\n        <LoadMoreButton\r\n          fetcher={getNewPage}\r\n        />\r\n      : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport async function getServerSideProps({ query }) {\r\n  const apolloClient = initializeApolloClient();\r\n  const initialProducts = await getProductsPage(apolloClient, {\r\n    start: 0,\r\n    limit: PAGE_LIMIT,\r\n    query\r\n  });\r\n  const departments = await getDepartments(apolloClient);\r\n\r\n  return { props: { initialProducts, departments, query } };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}