{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext, useState, useEffect } from \"react\";\n//: use this context whenever you want to access the OrderProvider\nconst OrderContext = /*#__PURE__*/createContext(null);\nexport default OrderContext;\nexport { OrderProvider }; //: use this component in all the other components where you want to access\n//: the global state of a user order\n\nfunction OrderProvider({\n  children\n}) {\n  const {\n    0: order,\n    1: setOrder\n  } = useState([]);\n\n  const getOrder = () => {\n    try {\n      return JSON.parse(localStorage.getItem('order')) || [];\n    } catch (error) {}\n\n    return [];\n  };\n\n  useEffect(() => {\n    const o = getOrder();\n    setOrder(o);\n  }, []);\n  useEffect(() => {\n    saveOrder(order);\n  }, [order]);\n\n  const saveOrder = order => {\n    localStorage.setItem('order', JSON.stringify(order));\n  };\n\n  const addProductToBag = (variantQuantity, product) => {\n    const activeOrder = [...order]; //: if the product and variant is already there\n\n    const indexOfOrderItem = activeOrder.findIndex(orderItem => orderItem.variant.id === product.variant.id);\n\n    if (indexOfOrderItem !== -1) {\n      //: update quantity\n      const currentQuantity = activeOrder[indexOfOrderItem].quantity;\n\n      if (currentQuantity + variantQuantity <= product.variant.stock) {\n        activeOrder[indexOfOrderItem].quantity = currentQuantity + variantQuantity;\n      }\n    } else {\n      activeOrder.push({\n        product: product.product,\n        variant: product.variant,\n        quantity: variantQuantity,\n        offers: product.offers\n      });\n    }\n\n    setOrder(activeOrder);\n  };\n\n  const removeProduct = itemNumber => {\n    const activeOrder = [...order];\n    activeOrder.splice(itemNumber, 1);\n    setOrder(activeOrder);\n  };\n\n  return /*#__PURE__*/_jsx(OrderContext.Provider, {\n    value: {\n      order,\n      addProductToBag,\n      removeProduct,\n      setOrder\n    },\n    children: children\n  });\n}\n\n;","map":null,"metadata":{},"sourceType":"module"}