{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\cuatl-2\\\\context\\\\OrderContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\n//: use this context whenever you want to access the OrderProvider\nvar OrderContext = /*#__PURE__*/createContext(null);\nexport default OrderContext;\nexport { OrderProvider }; //: use this component in all the other components where you want to access\n//: the global state of a user order\n\nfunction OrderProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      order = _useState[0],\n      setOrder = _useState[1];\n  /*\r\n    const countProducts = (): number => {\r\n    return order ? order.variants.length : 0;\r\n  };\r\n    const addOrderItem = (item: IPaymentOrder) => {\r\n  };\r\n    //: use this function to add a new item to the order in local storage\r\n  const setOrderItemInLS = (activeOrder: Array<IPaymentOrder>) => {\r\n    localStorage.setItem('orderItems', JSON.stringify(activeOrder));\r\n  };\r\n    //: use this function to get the current order object from local storage\r\n  const getOrderItemFromLS = (): Array<IPaymentOrder> => {\r\n    try {\r\n      return JSON.parse(localStorage.getItem('orderItems')) || [];\r\n    } catch (_error) {\r\n      console.error((_error as SyntaxError).message);\r\n      return null;\r\n    }\r\n  };*/\n\n\n  return /*#__PURE__*/_jsxDEV(OrderContext.Provider, {\n    value: {\n      order: order,\n      countProducts: countProducts\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrderProvider, \"hwEvYyKnu2xkJYdsINuCtcq3if0=\");\n\n_c = OrderProvider;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderProvider\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/cuatl-2/context/OrderContext.tsx"],"names":["createContext","useState","OrderContext","OrderProvider","children","order","setOrder","countProducts"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AAKA;AACA,IAAMC,YAAY,gBAAGF,aAAa,CAAC,IAAD,CAAlC;AAEA,eAAeE,YAAf;AAEA,SAASC,aAAT,G,CAEA;AACA;;AACA,SAASA,aAAT,OAAqC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBAETH,QAAQ,CAAS,IAAT,CAFC;AAAA,MAE5BI,KAF4B;AAAA,MAErBC,QAFqB;AAOnC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAME,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAALA,KAAF;AAASE,MAAAA,aAAa,EAAbA;AAAT,KAA9B;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GApCQD,a;;KAAAA,a;AAoCR","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nimport IOrder from \"@/models/IOrder\";\r\nimport IPaymentOrder from \"@/models/IPaymentOrder\";\r\n\r\n//: use this context whenever you want to access the OrderProvider\r\nconst OrderContext = createContext(null);\r\n\r\nexport default OrderContext;\r\n\r\nexport { OrderProvider };\r\n\r\n//: use this component in all the other components where you want to access\r\n//: the global state of a user order\r\nfunction OrderProvider({ children }) {\r\n\r\n  const [order, setOrder] = useState<IOrder>(null);\r\n\r\n  \r\n\r\n\r\n  /*\r\n\r\n  const countProducts = (): number => {\r\n    return order ? order.variants.length : 0;\r\n  };\r\n\r\n  const addOrderItem = (item: IPaymentOrder) => {\r\n  };\r\n\r\n  //: use this function to add a new item to the order in local storage\r\n  const setOrderItemInLS = (activeOrder: Array<IPaymentOrder>) => {\r\n    localStorage.setItem('orderItems', JSON.stringify(activeOrder));\r\n  };\r\n\r\n  //: use this function to get the current order object from local storage\r\n  const getOrderItemFromLS = (): Array<IPaymentOrder> => {\r\n    try {\r\n      return JSON.parse(localStorage.getItem('orderItems')) || [];\r\n    } catch (_error) {\r\n      console.error((_error as SyntaxError).message);\r\n      return null;\r\n    }\r\n  };*/\r\n\r\n  return (\r\n    <OrderContext.Provider value={{ order, countProducts }}>\r\n      {children}\r\n    </OrderContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}