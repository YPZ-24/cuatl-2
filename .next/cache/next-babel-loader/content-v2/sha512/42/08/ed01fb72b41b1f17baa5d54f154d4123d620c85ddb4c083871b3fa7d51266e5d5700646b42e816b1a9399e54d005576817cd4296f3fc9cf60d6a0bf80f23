{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/DELL/Desktop/cuatl-2/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/DELL/Desktop/cuatl-2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\cuatl-2\\\\components\\\\Header.tsx\",\n    _s = $RefreshSig$();\n\nimport Head from 'next/head.js';\nimport { useContext, useEffect } from 'react/index';\nimport Omnibar from '@/components/navbars/Omnibar';\nimport AuthContext from '@/context/AuthContext';\nimport { initializeApolloClient } from '@/lib/apollo-client';\nexport default function Header(_ref) {\n  _s();\n\n  var departments = _ref.departments;\n\n  var _useContext = useContext(AuthContext),\n      login = _useContext.login,\n      useSession = _useContext.useSession;\n\n  console.log(\"departments\");\n  console.log(departments);\n  useSession();\n  useEffect(function () {\n    var loginUser = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!location.search) {\n                  _context.next = 3;\n                  break;\n                }\n\n                _context.next = 3;\n                return login(location.search);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function loginUser() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    loginUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Cuatl - La mejor moda artesanal de M\\xE9xico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Encuentra los mejores productos artesanales de M\\xE9xico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Omnibar, {\n      menuEntries: departments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"icXKD32QlY9ku96QpOjavYFFPnY=\", true);\n\n_c = Header;\n;\nexport var getServerSideProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var apolloClient, departments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            apolloClient = initializeApolloClient(); //const departments = await getDepartments(apolloClient);\n\n            departments = \"Holaaaaaa\";\n            return _context2.abrupt(\"return\", {\n              props: {\n                departments: departments\n              }\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getServerSideProps() {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/cuatl-2/components/Header.tsx"],"names":["Head","useContext","useEffect","Omnibar","AuthContext","initializeApolloClient","Header","departments","login","useSession","console","log","loginUser","location","search","getServerSideProps","apolloClient","props"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,cAAjB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,aAAtC;AAEA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,sBAAT,QAAuC,qBAAvC;AAGA,eAAe,SAASC,MAAT,OAAiC;AAAA;;AAAA,MAAfC,WAAe,QAAfA,WAAe;;AAAA,oBAChBN,UAAU,CAACG,WAAD,CADM;AAAA,MACtCI,KADsC,eACtCA,KADsC;AAAA,MAC/BC,UAD+B,eAC/BA,UAD+B;;AAE9CC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AAEAE,EAAAA,UAAU;AAEVP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMU,SAAS;AAAA,2EAAG;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEZC,QAAQ,CAACC,MAFG;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEWN,KAAK,CAACK,QAAQ,CAACC,MAAV,CAFhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATF,SAAS;AAAA;AAAA;AAAA,OAAf;;AAKAA,IAAAA,SAAS;AACV,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,OAAD;AAAS,MAAA,WAAW,EAAEL;AAAtB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA1BuBD,M;;KAAAA,M;AA0BvB;AAED,OAAO,IAAMS,kBAAsC;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9CC,YAAAA,YAD8C,GAC/BX,sBAAsB,EADS,EAEpD;;AACME,YAAAA,WAH8C,GAGhC,WAHgC;AAAA,8CAI7C;AAAEU,cAAAA,KAAK,EAAE;AAAEV,gBAAAA,WAAW,EAAXA;AAAF;AAAT,aAJ6C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAtCQ,kBAAsC;AAAA;AAAA;AAAA,GAA5C","sourcesContent":["import Head from 'next/head.js';\r\nimport { useContext, useEffect } from 'react/index';\r\nimport { getDepartments } from '@/actions/fetch-departments';\r\nimport Omnibar from '@/components/navbars/Omnibar';\r\nimport AuthContext from '@/context/AuthContext';\r\nimport { initializeApolloClient } from '@/lib/apollo-client';\r\nimport { GetServerSideProps } from 'next';\r\n\r\nexport default function Header({ departments }) {\r\n  const { login, useSession } = useContext(AuthContext);\r\n  console.log(\"departments\")\r\n  console.log(departments)\r\n\r\n  useSession();\r\n\r\n  useEffect(() => {\r\n    const loginUser = async () => {\r\n      //: login user if the session token is in the route query\r\n      if (location.search) await login(location.search);\r\n    };\r\n\r\n    loginUser();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Head>\r\n        <title>Cuatl - La mejor moda artesanal de México</title>\r\n        <meta name=\"description\" content=\"Encuentra los mejores productos artesanales de México\" />\r\n      </Head>\r\n\r\n      <Omnibar menuEntries={departments} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps: GetServerSideProps = async () => {\r\n  const apolloClient = initializeApolloClient();\r\n  //const departments = await getDepartments(apolloClient);\r\n  const departments = \"Holaaaaaa\"\r\n  return { props: { departments } };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}