{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/DELL/Desktop/cuatl-2/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/DELL/Desktop/cuatl-2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { API_DOMAIN } from '@/config/globals';\n\nvar getSessionStorage = function getSessionStorage() {\n  try {\n    return JSON.parse(sessionStorage.getItem('session'));\n  } catch (_error) {\n    console.error(_error.message);\n    return null;\n  }\n};\n\nvar getToken = function getToken() {\n  return getSessionStorage().token;\n};\n\nfunction myFetch(_x) {\n  return _myFetch.apply(this, arguments);\n}\n\nfunction _myFetch() {\n  _myFetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var method, path, body, token, res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            method = _ref.method, path = _ref.path, body = _ref.body;\n            _context.next = 3;\n            return getToken();\n\n          case 3:\n            token = _context.sent;\n            console.log(\"TOKEEEEEEEEEEEN \", token);\n            _context.prev = 5;\n            _context.next = 8;\n            return fetch(API_DOMAIN + path, {\n              method: method,\n              body: JSON.stringify(body),\n              headers: {\n                'Content-type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': \"Bearer \".concat(token)\n              }\n            });\n\n          case 8:\n            res = _context.sent;\n            _context.next = 11;\n            return res.json();\n\n          case 11:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](5);\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[5, 15]]);\n  }));\n  return _myFetch.apply(this, arguments);\n}\n\nexport default myFetch;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/cuatl-2/utils/myFetch.js"],"names":["API_DOMAIN","getSessionStorage","JSON","parse","sessionStorage","getItem","_error","console","error","message","getToken","token","myFetch","method","path","body","log","fetch","stringify","headers","res","json","data"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,kBAA3B;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5B,MAAI;AACF,WAAOC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAX,CAAP;AACD,GAFD,CAEE,OAAOC,MAAP,EAAe;AACfC,IAAAA,OAAO,CAACC,KAAR,CAAeF,MAAD,CAASG,OAAvB;AACA,WAAO,IAAP;AACD;AACJ,CAPD;;AASA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAK;AAClB,SAAOT,iBAAiB,GAAGU,KAA3B;AACH,CAFD;;SAQeC,O;;;;;sEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyBC,YAAAA,MAAzB,QAAyBA,MAAzB,EAAiCC,IAAjC,QAAiCA,IAAjC,EAAuCC,IAAvC,QAAuCA,IAAvC;AAAA;AAAA,mBACwBL,QAAQ,EADhC;;AAAA;AACUC,YAAAA,KADV;AAEIJ,YAAAA,OAAO,CAACS,GAAR,CAAY,kBAAZ,EAAgCL,KAAhC;AAFJ;AAAA;AAAA,mBAI0BM,KAAK,CAACjB,UAAU,GAACc,IAAZ,EAAkB;AACzCD,cAAAA,MAAM,EAAEA,MADiC;AAEzCE,cAAAA,IAAI,EAAEb,IAAI,CAACgB,SAAL,CAAeH,IAAf,CAFmC;AAGzCI,cAAAA,OAAO,EAAE;AACL,gCAAgB,kBADX;AAEL,0BAAU,kBAFL;AAGL,kDAA2BR,KAA3B;AAHK;AAHgC,aAAlB,CAJ/B;;AAAA;AAIcS,YAAAA,GAJd;AAAA;AAAA,mBAcqBA,GAAG,CAACC,IAAJ,EAdrB;;AAAA;AAcQC,YAAAA,IAdR;AAAA,6CAeeA,IAff;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAsBA,eAAeV,OAAf","sourcesContent":["import { API_DOMAIN } from '@/config/globals';\r\n\r\nconst getSessionStorage = () => {\r\n    try {\r\n      return JSON.parse(sessionStorage.getItem('session'));\r\n    } catch (_error) {\r\n      console.error((_error).message);\r\n      return null;\r\n    }\r\n};\r\n\r\nconst getToken = ()=> {\r\n    return getSessionStorage().token;\r\n};\r\n\r\n\r\n\r\n\r\n\r\nasync function myFetch ({method, path, body}){\r\n    const token = await getToken();\r\n    console.log(\"TOKEEEEEEEEEEEN \", token)\r\n    try{\r\n        const res = await fetch(API_DOMAIN+path, {\r\n        method: method,\r\n        body: JSON.stringify(body),\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n        });\r\n        let data;\r\n        data = await res.json();\r\n        return data;\r\n    }catch(e){\r\n        //e.message = \"Fetch failed\"\r\n        return e\r\n    }\r\n}\r\n\r\nexport default myFetch;"]},"metadata":{},"sourceType":"module"}