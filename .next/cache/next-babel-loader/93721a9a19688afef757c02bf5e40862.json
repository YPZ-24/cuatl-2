{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { STRIPE_PUBLISHED_KEY, API_DOMAIN } from '@/config/globals';\nimport AuthContext from '@/context/AuthContext';\nvar stripePromise = loadStripe(STRIPE_PUBLISHED_KEY);\n\nvar PaymentButton = function PaymentButton(_ref) {\n  var order = _ref.order;\n\n  var _useContext = useContext(AuthContext),\n      getToken = _useContext.getToken;\n\n  var handlePayment = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var stripe, token, response, session, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return stripePromise;\n\n            case 2:\n              stripe = _context.sent;\n              _context.next = 5;\n              return getToken();\n\n            case 5:\n              token = _context.sent;\n              _context.next = 8;\n              return fetch(\"\".concat(API_DOMAIN, \"/orders\"), {\n                method: 'POST',\n                body: JSON.stringify({\n                  order: order\n                }),\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': \"Bearer \".concat(token)\n                }\n              });\n\n            case 8:\n              response = _context.sent;\n              _context.next = 11;\n              return response.json();\n\n            case 11:\n              session = _context.sent;\n              _context.next = 14;\n              return stripe.redirectToCheckout({\n                sessionId: session.id\n              });\n\n            case 14:\n              result = _context.sent;\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handlePayment() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(\"button\", {\n    onClick: handlePayment,\n    className: \"flex flex-row flex-nowrap items-center justify-center font-bold px-4 py-3 rounded-lg bg-accent text-base shadow hover:bg-inactive hover:text-primary\",\n    children: \"Continuar al pago\"\n  });\n};\n\nPaymentButton[\"default\"] = {\n  order: []\n};\nexport default PaymentButton;","map":null,"metadata":{},"sourceType":"module"}