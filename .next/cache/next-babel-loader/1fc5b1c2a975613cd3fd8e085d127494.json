{"ast":null,"code":"/**\n * This utility function returns a media URL based on one of three cases:\n *\n *  1. There's no media source to return (when no media is added).\n *  2. The media is served from the same server that runs the app (local).\n *  3. The media is served by an upload provider (remote server).\n */\nimport { API_DOMAIN } from '@/config/globals';\nimport mediaNotFoundImage from \"@/assets/images/media_not_found.svg\";\n;\n\nconst getMediaSource = media => {\n  //: Case 1.\n  if (!media) {\n    return mediaNotFoundImage;\n  } //: Case 2.\n\n\n  if (media.url.indexOf(\"/\") === 0) {\n    return API_DOMAIN + media.url;\n  } //: Case 3.\n\n\n  return media.url;\n};\n\nexport default getMediaSource;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/cuatl/cuatl/front-end/utils/get-media-source.ts"],"names":["API_DOMAIN","mediaNotFoundImage","getMediaSource","media","url","indexOf"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,QAA2B,kBAA3B;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AAKC;;AAED,MAAMC,cAAwC,GAAIC,KAAD,IAAW;AAC1D;AACA,MAAI,CAACA,KAAL,EAAY;AACV,WAAOF,kBAAP;AACD,GAJyD,CAM1D;;;AACA,MAAIE,KAAK,CAACC,GAAN,CAAUC,OAAV,CAAkB,GAAlB,MAA2B,CAA/B,EAAkC;AAChC,WAAOL,UAAU,GAAGG,KAAK,CAACC,GAA1B;AACD,GATyD,CAW1D;;;AACA,SAAOD,KAAK,CAACC,GAAb;AACD,CAbD;;AAeA,eAAeF,cAAf","sourcesContent":["/**\n * This utility function returns a media URL based on one of three cases:\n *\n *  1. There's no media source to return (when no media is added).\n *  2. The media is served from the same server that runs the app (local).\n *  3. The media is served by an upload provider (remote server).\n */\nimport { API_DOMAIN } from '@/config/globals';\nimport mediaNotFoundImage from \"@/assets/images/media_not_found.svg\";\n\ninterface Media {\n  url: string;\n  [key: string]: any;\n};\n\nconst getMediaSource: (media: Media) => string = (media) => {\n  //: Case 1.\n  if (!media) {\n    return mediaNotFoundImage;\n  }\n\n  //: Case 2.\n  if (media.url.indexOf(\"/\") === 0) {\n    return API_DOMAIN + media.url;\n  }\n\n  //: Case 3.\n  return media.url;\n};\n\nexport default getMediaSource;\n"]},"metadata":{},"sourceType":"module"}