{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\cuatl\\\\cuatl\\\\front-end\\\\components\\\\buttons\\\\AddToBagButton.tsx\";\nimport PropTypes from 'prop-types';\nimport { ShoppingBag } from 'react-feather';\nAddToBagButton.propTypes = {\n  order: PropTypes.object\n};\nAddToBagButton.defaultProps = {\n  order: null\n};\nconst classes = {\n  container: `\n    bg-accent\n    cursor-pointer\n    flex\n    flex-row\n    flex-nowrap\n    items-center\n    hover:bg-inactive\n    hover:text-primary\n    justify-center\n    font-bold\n    px-4\n    py-3\n    rounded-lg\n    text-bse\n    shadow\n  `\n};\nexport default function AddToBagButton({\n  order\n}) {\n  const setOrder = activeOrder => {\n    localStorage.setItem('order', JSON.stringify(activeOrder));\n  };\n\n  const getOrder = () => {\n    try {\n      return JSON.parse(localStorage.getItem('order')) || [];\n    } catch (error) {}\n\n    return [];\n  };\n\n  const addProductToBag = event => {\n    event.preventDefault();\n    const activeOrder = getOrder();\n    const quantitySelector = document.getElementById('quantity');\n    const variantQuantity = parseInt(quantitySelector.value); //: if the product and variant is already there\n\n    const indexOfOrderItem = activeOrder.findIndex(orderItem => orderItem.variant.id === order.variant.id);\n\n    if (indexOfOrderItem !== -1) {\n      //: update quantity\n      const currentQuantity = activeOrder[indexOfOrderItem].quantity;\n\n      if (currentQuantity + variantQuantity <= order.variant.stock) {\n        activeOrder[indexOfOrderItem].quantity = currentQuantity + variantQuantity;\n      }\n    } else {\n      activeOrder.push({\n        product: order.product,\n        variant: order.variant,\n        quantity: variantQuantity,\n        offers: order.offers\n      });\n    }\n\n    console.log(activeOrder);\n    setOrder(activeOrder);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    onClick: e => addProductToBag(e),\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"mr-3\",\n      children: /*#__PURE__*/_jsxDEV(ShoppingBag, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"A\\xF1adir a la bolsa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/cuatl/cuatl/front-end/components/buttons/AddToBagButton.tsx"],"names":["PropTypes","ShoppingBag","AddToBagButton","propTypes","order","object","defaultProps","classes","container","setOrder","activeOrder","localStorage","setItem","JSON","stringify","getOrder","parse","getItem","error","addProductToBag","event","preventDefault","quantitySelector","document","getElementById","variantQuantity","parseInt","value","indexOfOrderItem","findIndex","orderItem","variant","id","currentQuantity","quantity","stock","push","product","offers","console","log","e"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAIAC,cAAc,CAACC,SAAf,GAA2B;AACzBC,EAAAA,KAAK,EAAEJ,SAAS,CAACK;AADQ,CAA3B;AAIAH,cAAc,CAACI,YAAf,GAA8B;AAC5BF,EAAAA,KAAK,EAAE;AADqB,CAA9B;AAIA,MAAMG,OAAO,GAAG;AACdC,EAAAA,SAAS,EAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBgB,CAAhB;AAoBA,eAAe,SAASN,cAAT,CAAwB;AAAEE,EAAAA;AAAF,CAAxB,EAA6D;AAC1E,QAAMK,QAAQ,GAAIC,WAAD,IAAuC;AACtDC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeJ,WAAf,CAA9B;AACD,GAFD;;AAIA,QAAMK,QAAQ,GAAG,MAA4B;AAC3C,QAAI;AACF,aAAOF,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,OAArB,CAAX,KAA6C,EAApD;AACD,KAFD,CAEE,OAAOC,KAAP,EAAc,CAAG;;AAEnB,WAAO,EAAP;AACD,GAND;;AAQA,QAAMC,eAAe,GAAIC,KAAD,IAAgB;AACtCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMX,WAAW,GAAGK,QAAQ,EAA5B;AACA,UAAMO,gBAAgB,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAzB;AACA,UAAMC,eAAe,GAAGC,QAAQ,CAACJ,gBAAgB,CAACK,KAAlB,CAAhC,CALsC,CAOtC;;AACA,UAAMC,gBAAgB,GAAGlB,WAAW,CAACmB,SAAZ,CAAuBC,SAAD,IAA8BA,SAAS,CAACC,OAAV,CAAkBC,EAAlB,KAAyB5B,KAAK,CAAC2B,OAAN,CAAcC,EAA3F,CAAzB;;AAEA,QAAIJ,gBAAgB,KAAK,CAAC,CAA1B,EAA6B;AAC3B;AACA,YAAMK,eAAe,GAAGvB,WAAW,CAACkB,gBAAD,CAAX,CAA8BM,QAAtD;;AACA,UAAID,eAAe,GAAGR,eAAlB,IAAqCrB,KAAK,CAAC2B,OAAN,CAAcI,KAAvD,EAA8D;AAC5DzB,QAAAA,WAAW,CAACkB,gBAAD,CAAX,CAA8BM,QAA9B,GAAyCD,eAAe,GAAGR,eAA3D;AACD;AACF,KAND,MAMO;AACLf,MAAAA,WAAW,CAAC0B,IAAZ,CAAiB;AACfC,QAAAA,OAAO,EAAEjC,KAAK,CAACiC,OADA;AAEfN,QAAAA,OAAO,EAAE3B,KAAK,CAAC2B,OAFA;AAGfG,QAAAA,QAAQ,EAAET,eAHK;AAIfa,QAAAA,MAAM,EAAElC,KAAK,CAACkC;AAJC,OAAjB;AAMD;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAY9B,WAAZ;AAEAD,IAAAA,QAAQ,CAACC,WAAD,CAAR;AACD,GA5BD;;AA8BA,sBACE;AAAG,IAAA,OAAO,EAAG+B,CAAD,IAAOtB,eAAe,CAACsB,CAAD,CAAlC;AAAuC,IAAA,SAAS,EAAElC,OAAO,CAACC,SAA1D;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,6BAAuB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;AAAA","sourcesContent":["import PropTypes from 'prop-types';\nimport { ShoppingBag } from 'react-feather';\n\nimport IPaymentOrder from '@/models/IPaymentOrder';\n\nAddToBagButton.propTypes = {\n  order: PropTypes.object\n};\n\nAddToBagButton.defaultProps = {\n  order: null\n};\n\nconst classes = {\n  container: `\n    bg-accent\n    cursor-pointer\n    flex\n    flex-row\n    flex-nowrap\n    items-center\n    hover:bg-inactive\n    hover:text-primary\n    justify-center\n    font-bold\n    px-4\n    py-3\n    rounded-lg\n    text-bse\n    shadow\n  `\n};\n\nexport default function AddToBagButton({ order }: { order: IPaymentOrder }) {\n  const setOrder = (activeOrder: Array<IPaymentOrder>) => {\n    localStorage.setItem('order', JSON.stringify(activeOrder));\n  };\n\n  const getOrder = (): Array<IPaymentOrder> => {\n    try {\n      return JSON.parse(localStorage.getItem('order')) || [];\n    } catch (error) { }\n\n    return [];\n  };\n\n  const addProductToBag = (event: any) => {\n    event.preventDefault();\n\n    const activeOrder = getOrder();\n    const quantitySelector = document.getElementById('quantity') as HTMLInputElement;\n    const variantQuantity = parseInt(quantitySelector.value);\n\n    //: if the product and variant is already there\n    const indexOfOrderItem = activeOrder.findIndex((orderItem: IPaymentOrder) => orderItem.variant.id === order.variant.id);\n\n    if (indexOfOrderItem !== -1) {\n      //: update quantity\n      const currentQuantity = activeOrder[indexOfOrderItem].quantity;\n      if (currentQuantity + variantQuantity <= order.variant.stock) {\n        activeOrder[indexOfOrderItem].quantity = currentQuantity + variantQuantity;\n      }\n    } else {\n      activeOrder.push({\n        product: order.product,\n        variant: order.variant,\n        quantity: variantQuantity,\n        offers: order.offers\n      });\n    }\n\n    console.log(activeOrder)\n\n    setOrder(activeOrder);\n  };\n\n  return (\n    <a onClick={(e) => addProductToBag(e)} className={classes.container}>\n      <span className=\"mr-3\"><ShoppingBag /></span>\n      <span>AÃ±adir a la bolsa</span>\n    </a>\n  );\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}